/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{var t={708:function(t,e,r){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.decodeHTML=e.decodeHTMLStrict=e.decodeXML=void 0;var i=n(r(471)),o=n(r(187)),s=n(r(555)),a=n(r(338));function l(t){var e=Object.keys(t).join("|"),r=c(t),n=new RegExp("&(?:"+(e+="|#[xX][\\da-fA-F]+|#\\d+")+");","g");return function(t){return String(t).replace(n,r)}}e.decodeXML=l(s.default),e.decodeHTMLStrict=l(i.default);var u=function(t,e){return t<e?1:-1};function c(t){return function(e){if("#"===e.charAt(1)){var r=e.charAt(2);return"X"===r||"x"===r?a.default(parseInt(e.substr(3),16)):a.default(parseInt(e.substr(2),10))}return t[e.slice(1,-1)]}}e.decodeHTML=function(){for(var t=Object.keys(o.default).sort(u),e=Object.keys(i.default).sort(u),r=0,n=0;r<e.length;r++)t[n]===e[r]?(e[r]+=";?",n++):e[r]+=";";var s=new RegExp("&(?:"+e.join("|")+"|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),a=c(i.default);function l(t){return";"!==t.substr(-1)&&(t+=";"),a(t)}return function(t){return String(t).replace(s,l)}}()},338:function(t,e,r){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=n(r(746));e.default=function(t){if(t>=55296&&t<=57343||t>1114111)return"ï¿½";t in i.default&&(t=i.default[t]);var e="";return t>65535&&(t-=65536,e+=String.fromCharCode(t>>>10&1023|55296),t=56320|1023&t),e+String.fromCharCode(t)}},367:function(t,e,r){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.escape=e.encodeHTML=e.encodeXML=void 0;var i=l(n(r(555)).default),o=u(i);e.encodeXML=h(i,o);var s=l(n(r(471)).default),a=u(s);function l(t){return Object.keys(t).sort().reduce((function(e,r){return e[t[r]]="&"+r+";",e}),{})}function u(t){for(var e=[],r=[],n=0,i=Object.keys(t);n<i.length;n++){var o=i[n];1===o.length?e.push("\\"+o):r.push(o)}e.sort();for(var s=0;s<e.length-1;s++){for(var a=s;a<e.length-1&&e[a].charCodeAt(1)+1===e[a+1].charCodeAt(1);)a+=1;var l=1+a-s;l<3||e.splice(s,l,e[s]+"-"+e[a])}return r.unshift("["+e.join("")+"]"),new RegExp(r.join("|"),"g")}e.encodeHTML=h(s,a);var c=/(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g;function p(t){return"&#x"+t.codePointAt(0).toString(16).toUpperCase()+";"}function h(t,e){return function(r){return r.replace(e,(function(e){return t[e]})).replace(c,p)}}var f=u(i);e.escape=function(t){return t.replace(f,p).replace(c,p)}},717:(t,e,r)=>{"use strict";r(708),r(367),r(367);var n=r(708);Object.defineProperty(e,"p1",{enumerable:!0,get:function(){return n.decodeHTML}})},192:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var n=r(537),i=r.n(n),o=r(645),s=r.n(o)()(i());s.push([t.id,"body{font-family:Arial,Helvetica,sans-serif}.answers{text-align:center}.button-yellow{background-color:#f8bd35;transition:opacity .1s}.button-yellow:hover{opacity:.8}.button-white{background-color:#fff;transition:background-color .1s;border:1px solid silver}.button-white:hover{background-color:#ddd}button{cursor:pointer;border:none;border-radius:10px;padding:1em;margin-right:1em}button.nav-button{margin-top:30px}button:last-child{margin-right:0}@media(max-width: 600px){button{width:85%;margin-right:0;margin-bottom:10px}button:last-child{margin-bottom:0}}button.margin-bottom{margin-bottom:30px}#container{text-align:center;margin-left:auto;margin-right:auto;margin-top:10px;width:80%}@media(max-width: 600px){#container{width:90%}}#container .question{text-align:left;border:1px solid gray;border-radius:5px;padding:1em;box-shadow:0px 10px 30px #ddd}@media(max-width: 600px){#container .question{box-shadow:0 10px 10px #ddd}}#container .question h3{margin:0}#container .question p.text{margin:0 0 1em 0}#container .question .answers{text-align:center}.button-small{background-color:#f8bd35;border-bottom-left-radius:300px;border-bottom-right-radius:300px;border-top-left-radius:300px;border-top-right-radius:300px;color:#000;display:inline-block;font-family:proxima-nova;font-size:17px;font-style:normal;font-weight:700;letter-spacing:2px;line-height:17px;margin-bottom:10px;margin-top:10px;padding-bottom:17px;padding-left:29.75px;padding-right:29.75px;padding-top:17px;text-align:center;text-decoration-color:#000;text-transform:uppercase;transition-delay:0s;transition-duration:.1s;transition-property:opacity;transition-timing-function:linear;position:relative;left:50%;transform:translateX(-50%)}.button-medium:hover,.button-small:hover{opacity:.8}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAEA,KACE,sCAAA,CAGF,SACE,iBAAA,CAGF,eACE,wBAAA,CACA,sBAAA,CAEA,qBACE,UAAA,CAIJ,cACE,qBAAA,CACA,+BAAA,CACA,uBAAA,CAEA,oBACE,qBAAA,CAIJ,OACE,cAAA,CACA,WAAA,CACA,kBAAA,CACA,WAAA,CACA,gBAAA,CAEA,kBACE,eAAA,CAGF,kBACE,cAAA,CAGF,yBAfF,OAgBI,SAAA,CACA,cAAA,CACA,kBAAA,CAEA,kBACE,eAAA,CAAA,CAKN,qBACE,kBAAA,CAGF,WACE,iBAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,SAAA,CAEA,yBAPF,WAQI,SAAA,CAAA,CAGF,qBACE,eAAA,CACA,qBAAA,CACA,iBAAA,CACA,WAAA,CACA,6BAAA,CAEA,yBAPF,qBAQI,2BAAA,CAAA,CAGF,wBACE,QAAA,CAGF,4BACE,gBAAA,CAGF,8BACE,iBAAA,CAKN,cACE,wBAAA,CACA,+BAAA,CACA,gCAAA,CACA,4BAAA,CACA,6BAAA,CACA,UAAA,CACA,oBAAA,CACA,wBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,gBAAA,CACA,kBAAA,CACA,eAAA,CACA,mBAAA,CACA,oBAAA,CACA,qBAAA,CACA,gBAAA,CACA,iBAAA,CACA,0BAAA,CACA,wBAAA,CACA,mBAAA,CACA,uBAAA,CACA,2BAAA,CACA,iCAAA,CACA,iBAAA,CACA,QAAA,CACA,0BAAA,CAGF,yCAEE,UAAA",sourcesContent:["$mobileThreshold: 600px;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n.answers {\n  text-align: center;\n}\n\n.button-yellow {\n  background-color: rgb(248, 189, 53);\n  transition: opacity 0.1s;\n\n  &:hover {\n    opacity: 0.8;\n  }\n}\n\n.button-white {\n  background-color: white;\n  transition: background-color 0.1s;\n  border: 1px solid silver;\n\n  &:hover {\n    background-color: #ddd;\n  }\n}\n\nbutton {\n  cursor: pointer;\n  border: none;\n  border-radius: 10px;\n  padding: 1em;\n  margin-right: 1em;\n\n  &.nav-button {\n    margin-top: 30px;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  @media (max-width: $mobileThreshold) {\n    width: 85%;\n    margin-right: 0;\n    margin-bottom: 10px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\nbutton.margin-bottom {\n  margin-bottom: 30px;\n}\n\n#container {\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  width: 80%;\n\n  @media (max-width: $mobileThreshold) {\n    width: 90%;\n  }\n\n  .question {\n    text-align: left;\n    border: 1px solid gray;\n    border-radius: 5px;\n    padding: 1em;\n    box-shadow: 0px 10px 30px #ddd;\n\n    @media (max-width: $mobileThreshold) {\n      box-shadow: 0 10px 10px #ddd;\n    }\n\n    h3 {\n      margin: 0;\n    }\n\n    p.text {\n      margin: 0 0 1em 0;\n    }\n\n    .answers {\n      text-align: center;\n    }\n  }\n}\n\n.button-small {\n  background-color: rgb(248, 189, 53);\n  border-bottom-left-radius: 300px;\n  border-bottom-right-radius: 300px;\n  border-top-left-radius: 300px;\n  border-top-right-radius: 300px;\n  color: rgb(0, 0, 0);\n  display: inline-block;\n  font-family: proxima-nova;\n  font-size: 17px;\n  font-style: normal;\n  font-weight: 700;\n  letter-spacing: 2px;\n  line-height: 17px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding-bottom: 17px;\n  padding-left: 29.75px;\n  padding-right: 29.75px;\n  padding-top: 17px;\n  text-align: center;\n  text-decoration-color: rgb(0, 0, 0);\n  text-transform: uppercase;\n  transition-delay: 0s;\n  transition-duration: 0.1s;\n  transition-property: opacity;\n  transition-timing-function: linear;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.button-medium:hover,\n.button-small:hover {\n  opacity: 0.8;\n}"],sourceRoot:""}]);const a=s},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(n)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var u=0;u<t.length;u++){var c=[].concat(t[u]);n&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),o="/*# ".concat(i," */"),s=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([o]).join("\n")}return[e].join("\n")}},991:t=>{"use strict";t.exports=function t(e,r){if(e===r)return!0;if(e&&r&&"object"==typeof e&&"object"==typeof r){if(e.constructor!==r.constructor)return!1;var n,i,o;if(Array.isArray(e)){if((n=e.length)!=r.length)return!1;for(i=n;0!=i--;)if(!t(e[i],r[i]))return!1;return!0}if(e instanceof Map&&r instanceof Map){if(e.size!==r.size)return!1;for(i of e.entries())if(!r.has(i[0]))return!1;for(i of e.entries())if(!t(i[1],r.get(i[0])))return!1;return!0}if(e instanceof Set&&r instanceof Set){if(e.size!==r.size)return!1;for(i of e.entries())if(!r.has(i[0]))return!1;return!0}if(ArrayBuffer.isView(e)&&ArrayBuffer.isView(r)){if((n=e.length)!=r.length)return!1;for(i=n;0!=i--;)if(e[i]!==r[i])return!1;return!0}if(e.constructor===RegExp)return e.source===r.source&&e.flags===r.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===r.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===r.toString();if((n=(o=Object.keys(e)).length)!==Object.keys(r).length)return!1;for(i=n;0!=i--;)if(!Object.prototype.hasOwnProperty.call(r,o[i]))return!1;for(i=n;0!=i--;){var s=o[i];if(!t(e[s],r[s]))return!1}return!0}return e!=e&&r!=r}},729:t=>{"use strict";var e={};function r(t,n,i){var o,s,a,l,u,c="";for("string"!=typeof n&&(i=n,n=r.defaultChars),void 0===i&&(i=!0),u=function(t){var r,n,i=e[t];if(i)return i;for(i=e[t]=[],r=0;r<128;r++)n=String.fromCharCode(r),/^[0-9a-z]$/i.test(n)?i.push(n):i.push("%"+("0"+r.toString(16).toUpperCase()).slice(-2));for(r=0;r<t.length;r++)i[t.charCodeAt(r)]=t[r];return i}(n),o=0,s=t.length;o<s;o++)if(a=t.charCodeAt(o),i&&37===a&&o+2<s&&/^[0-9a-f]{2}$/i.test(t.slice(o+1,o+3)))c+=t.slice(o,o+3),o+=2;else if(a<128)c+=u[a];else if(a>=55296&&a<=57343){if(a>=55296&&a<=56319&&o+1<s&&(l=t.charCodeAt(o+1))>=56320&&l<=57343){c+=encodeURIComponent(t[o]+t[o+1]),o++;continue}c+="%EF%BF%BD"}else c+=encodeURIComponent(t[o]);return c}r.defaultChars=";/?:@&=+$,-_.!~*'()#",r.componentChars="-_.!~*'()",t.exports=r},822:()=>{String.prototype.repeat||function(){"use strict";var t=function(){try{var t={},e=Object.defineProperty,r=e(t,t,t)&&e}catch(t){}return r}(),e=function(t){if(null==this)throw TypeError();var e=String(this),r=t?Number(t):0;if(r!=r&&(r=0),r<0||r==1/0)throw RangeError();for(var n="";r;)r%2==1&&(n+=e),r>1&&(e+=e),r>>=1;return n};t?t(String.prototype,"repeat",{value:e,configurable:!0,writable:!0}):String.prototype.repeat=e}()},379:t=>{"use strict";var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var o={},s=[],a=0;a<t.length;a++){var l=t[a],u=n.base?l[0]+n.base:l[0],c=o[u]||0,p="".concat(u," ").concat(c);o[u]=c+1;var h=r(p),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)e[h].references++,e[h].updater(f);else{var d=i(f,n);n.byIndex=a,e.splice(a,0,{identifier:p,updater:d,references:1})}s.push(p)}return s}function i(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,i){var o=n(t=t||[],i=i||{});return function(t){t=t||[];for(var s=0;s<o.length;s++){var a=r(o[s]);e[a].references--}for(var l=n(t,i),u=0;u<o.length;u++){var c=r(o[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},569:t=>{"use strict";var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{"use strict";t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var i=void 0!==r.layer;i&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,i&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},746:t=>{"use strict";t.exports=JSON.parse('{"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376}')},471:t=>{"use strict";t.exports=JSON.parse('{"Aacute":"Ã","aacute":"Ã¡","Abreve":"Ä","abreve":"Ä","ac":"â¾","acd":"â¿","acE":"â¾Ì³","Acirc":"Ã","acirc":"Ã¢","acute":"Â´","Acy":"Ð","acy":"Ð°","AElig":"Ã","aelig":"Ã¦","af":"â¡","Afr":"ð","afr":"ð","Agrave":"Ã","agrave":"Ã ","alefsym":"âµ","aleph":"âµ","Alpha":"Î","alpha":"Î±","Amacr":"Ä","amacr":"Ä","amalg":"â¨¿","amp":"&","AMP":"&","andand":"â©","And":"â©","and":"â§","andd":"â©","andslope":"â©","andv":"â©","ang":"â ","ange":"â¦¤","angle":"â ","angmsdaa":"â¦¨","angmsdab":"â¦©","angmsdac":"â¦ª","angmsdad":"â¦«","angmsdae":"â¦¬","angmsdaf":"â¦­","angmsdag":"â¦®","angmsdah":"â¦¯","angmsd":"â¡","angrt":"â","angrtvb":"â¾","angrtvbd":"â¦","angsph":"â¢","angst":"Ã","angzarr":"â¼","Aogon":"Ä","aogon":"Ä","Aopf":"ð¸","aopf":"ð","apacir":"â©¯","ap":"â","apE":"â©°","ape":"â","apid":"â","apos":"\'","ApplyFunction":"â¡","approx":"â","approxeq":"â","Aring":"Ã","aring":"Ã¥","Ascr":"ð","ascr":"ð¶","Assign":"â","ast":"*","asymp":"â","asympeq":"â","Atilde":"Ã","atilde":"Ã£","Auml":"Ã","auml":"Ã¤","awconint":"â³","awint":"â¨","backcong":"â","backepsilon":"Ï¶","backprime":"âµ","backsim":"â½","backsimeq":"â","Backslash":"â","Barv":"â«§","barvee":"â½","barwed":"â","Barwed":"â","barwedge":"â","bbrk":"âµ","bbrktbrk":"â¶","bcong":"â","Bcy":"Ð","bcy":"Ð±","bdquo":"â","becaus":"âµ","because":"âµ","Because":"âµ","bemptyv":"â¦°","bepsi":"Ï¶","bernou":"â¬","Bernoullis":"â¬","Beta":"Î","beta":"Î²","beth":"â¶","between":"â¬","Bfr":"ð","bfr":"ð","bigcap":"â","bigcirc":"â¯","bigcup":"â","bigodot":"â¨","bigoplus":"â¨","bigotimes":"â¨","bigsqcup":"â¨","bigstar":"â","bigtriangledown":"â½","bigtriangleup":"â³","biguplus":"â¨","bigvee":"â","bigwedge":"â","bkarow":"â¤","blacklozenge":"â§«","blacksquare":"âª","blacktriangle":"â´","blacktriangledown":"â¾","blacktriangleleft":"â","blacktriangleright":"â¸","blank":"â£","blk12":"â","blk14":"â","blk34":"â","block":"â","bne":"=â¥","bnequiv":"â¡â¥","bNot":"â«­","bnot":"â","Bopf":"ð¹","bopf":"ð","bot":"â¥","bottom":"â¥","bowtie":"â","boxbox":"â§","boxdl":"â","boxdL":"â","boxDl":"â","boxDL":"â","boxdr":"â","boxdR":"â","boxDr":"â","boxDR":"â","boxh":"â","boxH":"â","boxhd":"â¬","boxHd":"â¤","boxhD":"â¥","boxHD":"â¦","boxhu":"â´","boxHu":"â§","boxhU":"â¨","boxHU":"â©","boxminus":"â","boxplus":"â","boxtimes":"â ","boxul":"â","boxuL":"â","boxUl":"â","boxUL":"â","boxur":"â","boxuR":"â","boxUr":"â","boxUR":"â","boxv":"â","boxV":"â","boxvh":"â¼","boxvH":"âª","boxVh":"â«","boxVH":"â¬","boxvl":"â¤","boxvL":"â¡","boxVl":"â¢","boxVL":"â£","boxvr":"â","boxvR":"â","boxVr":"â","boxVR":"â ","bprime":"âµ","breve":"Ë","Breve":"Ë","brvbar":"Â¦","bscr":"ð·","Bscr":"â¬","bsemi":"â","bsim":"â½","bsime":"â","bsolb":"â§","bsol":"\\\\","bsolhsub":"â","bull":"â¢","bullet":"â¢","bump":"â","bumpE":"âª®","bumpe":"â","Bumpeq":"â","bumpeq":"â","Cacute":"Ä","cacute":"Ä","capand":"â©","capbrcup":"â©","capcap":"â©","cap":"â©","Cap":"â","capcup":"â©","capdot":"â©","CapitalDifferentialD":"â","caps":"â©ï¸","caret":"â","caron":"Ë","Cayleys":"â­","ccaps":"â©","Ccaron":"Ä","ccaron":"Ä","Ccedil":"Ã","ccedil":"Ã§","Ccirc":"Ä","ccirc":"Ä","Cconint":"â°","ccups":"â©","ccupssm":"â©","Cdot":"Ä","cdot":"Ä","cedil":"Â¸","Cedilla":"Â¸","cemptyv":"â¦²","cent":"Â¢","centerdot":"Â·","CenterDot":"Â·","cfr":"ð ","Cfr":"â­","CHcy":"Ð§","chcy":"Ñ","check":"â","checkmark":"â","Chi":"Î§","chi":"Ï","circ":"Ë","circeq":"â","circlearrowleft":"âº","circlearrowright":"â»","circledast":"â","circledcirc":"â","circleddash":"â","CircleDot":"â","circledR":"Â®","circledS":"â","CircleMinus":"â","CirclePlus":"â","CircleTimes":"â","cir":"â","cirE":"â§","cire":"â","cirfnint":"â¨","cirmid":"â«¯","cirscir":"â§","ClockwiseContourIntegral":"â²","CloseCurlyDoubleQuote":"â","CloseCurlyQuote":"â","clubs":"â£","clubsuit":"â£","colon":":","Colon":"â·","Colone":"â©´","colone":"â","coloneq":"â","comma":",","commat":"@","comp":"â","compfn":"â","complement":"â","complexes":"â","cong":"â","congdot":"â©­","Congruent":"â¡","conint":"â®","Conint":"â¯","ContourIntegral":"â®","copf":"ð","Copf":"â","coprod":"â","Coproduct":"â","copy":"Â©","COPY":"Â©","copysr":"â","CounterClockwiseContourIntegral":"â³","crarr":"âµ","cross":"â","Cross":"â¨¯","Cscr":"ð","cscr":"ð¸","csub":"â«","csube":"â«","csup":"â«","csupe":"â«","ctdot":"â¯","cudarrl":"â¤¸","cudarrr":"â¤µ","cuepr":"â","cuesc":"â","cularr":"â¶","cularrp":"â¤½","cupbrcap":"â©","cupcap":"â©","CupCap":"â","cup":"âª","Cup":"â","cupcup":"â©","cupdot":"â","cupor":"â©","cups":"âªï¸","curarr":"â·","curarrm":"â¤¼","curlyeqprec":"â","curlyeqsucc":"â","curlyvee":"â","curlywedge":"â","curren":"Â¤","curvearrowleft":"â¶","curvearrowright":"â·","cuvee":"â","cuwed":"â","cwconint":"â²","cwint":"â±","cylcty":"â­","dagger":"â ","Dagger":"â¡","daleth":"â¸","darr":"â","Darr":"â¡","dArr":"â","dash":"â","Dashv":"â«¤","dashv":"â£","dbkarow":"â¤","dblac":"Ë","Dcaron":"Ä","dcaron":"Ä","Dcy":"Ð","dcy":"Ð´","ddagger":"â¡","ddarr":"â","DD":"â","dd":"â","DDotrahd":"â¤","ddotseq":"â©·","deg":"Â°","Del":"â","Delta":"Î","delta":"Î´","demptyv":"â¦±","dfisht":"â¥¿","Dfr":"ð","dfr":"ð¡","dHar":"â¥¥","dharl":"â","dharr":"â","DiacriticalAcute":"Â´","DiacriticalDot":"Ë","DiacriticalDoubleAcute":"Ë","DiacriticalGrave":"`","DiacriticalTilde":"Ë","diam":"â","diamond":"â","Diamond":"â","diamondsuit":"â¦","diams":"â¦","die":"Â¨","DifferentialD":"â","digamma":"Ï","disin":"â²","div":"Ã·","divide":"Ã·","divideontimes":"â","divonx":"â","DJcy":"Ð","djcy":"Ñ","dlcorn":"â","dlcrop":"â","dollar":"$","Dopf":"ð»","dopf":"ð","Dot":"Â¨","dot":"Ë","DotDot":"â","doteq":"â","doteqdot":"â","DotEqual":"â","dotminus":"â¸","dotplus":"â","dotsquare":"â¡","doublebarwedge":"â","DoubleContourIntegral":"â¯","DoubleDot":"Â¨","DoubleDownArrow":"â","DoubleLeftArrow":"â","DoubleLeftRightArrow":"â","DoubleLeftTee":"â«¤","DoubleLongLeftArrow":"â¸","DoubleLongLeftRightArrow":"âº","DoubleLongRightArrow":"â¹","DoubleRightArrow":"â","DoubleRightTee":"â¨","DoubleUpArrow":"â","DoubleUpDownArrow":"â","DoubleVerticalBar":"â¥","DownArrowBar":"â¤","downarrow":"â","DownArrow":"â","Downarrow":"â","DownArrowUpArrow":"âµ","DownBreve":"Ì","downdownarrows":"â","downharpoonleft":"â","downharpoonright":"â","DownLeftRightVector":"â¥","DownLeftTeeVector":"â¥","DownLeftVectorBar":"â¥","DownLeftVector":"â½","DownRightTeeVector":"â¥","DownRightVectorBar":"â¥","DownRightVector":"â","DownTeeArrow":"â§","DownTee":"â¤","drbkarow":"â¤","drcorn":"â","drcrop":"â","Dscr":"ð","dscr":"ð¹","DScy":"Ð","dscy":"Ñ","dsol":"â§¶","Dstrok":"Ä","dstrok":"Ä","dtdot":"â±","dtri":"â¿","dtrif":"â¾","duarr":"âµ","duhar":"â¥¯","dwangle":"â¦¦","DZcy":"Ð","dzcy":"Ñ","dzigrarr":"â¿","Eacute":"Ã","eacute":"Ã©","easter":"â©®","Ecaron":"Ä","ecaron":"Ä","Ecirc":"Ã","ecirc":"Ãª","ecir":"â","ecolon":"â","Ecy":"Ð­","ecy":"Ñ","eDDot":"â©·","Edot":"Ä","edot":"Ä","eDot":"â","ee":"â","efDot":"â","Efr":"ð","efr":"ð¢","eg":"âª","Egrave":"Ã","egrave":"Ã¨","egs":"âª","egsdot":"âª","el":"âª","Element":"â","elinters":"â§","ell":"â","els":"âª","elsdot":"âª","Emacr":"Ä","emacr":"Ä","empty":"â","emptyset":"â","EmptySmallSquare":"â»","emptyv":"â","EmptyVerySmallSquare":"â«","emsp13":"â","emsp14":"â","emsp":"â","ENG":"Å","eng":"Å","ensp":"â","Eogon":"Ä","eogon":"Ä","Eopf":"ð¼","eopf":"ð","epar":"â","eparsl":"â§£","eplus":"â©±","epsi":"Îµ","Epsilon":"Î","epsilon":"Îµ","epsiv":"Ïµ","eqcirc":"â","eqcolon":"â","eqsim":"â","eqslantgtr":"âª","eqslantless":"âª","Equal":"â©µ","equals":"=","EqualTilde":"â","equest":"â","Equilibrium":"â","equiv":"â¡","equivDD":"â©¸","eqvparsl":"â§¥","erarr":"â¥±","erDot":"â","escr":"â¯","Escr":"â°","esdot":"â","Esim":"â©³","esim":"â","Eta":"Î","eta":"Î·","ETH":"Ã","eth":"Ã°","Euml":"Ã","euml":"Ã«","euro":"â¬","excl":"!","exist":"â","Exists":"â","expectation":"â°","exponentiale":"â","ExponentialE":"â","fallingdotseq":"â","Fcy":"Ð¤","fcy":"Ñ","female":"â","ffilig":"ï¬","fflig":"ï¬","ffllig":"ï¬","Ffr":"ð","ffr":"ð£","filig":"ï¬","FilledSmallSquare":"â¼","FilledVerySmallSquare":"âª","fjlig":"fj","flat":"â­","fllig":"ï¬","fltns":"â±","fnof":"Æ","Fopf":"ð½","fopf":"ð","forall":"â","ForAll":"â","fork":"â","forkv":"â«","Fouriertrf":"â±","fpartint":"â¨","frac12":"Â½","frac13":"â","frac14":"Â¼","frac15":"â","frac16":"â","frac18":"â","frac23":"â","frac25":"â","frac34":"Â¾","frac35":"â","frac38":"â","frac45":"â","frac56":"â","frac58":"â","frac78":"â","frasl":"â","frown":"â¢","fscr":"ð»","Fscr":"â±","gacute":"Çµ","Gamma":"Î","gamma":"Î³","Gammad":"Ï","gammad":"Ï","gap":"âª","Gbreve":"Ä","gbreve":"Ä","Gcedil":"Ä¢","Gcirc":"Ä","gcirc":"Ä","Gcy":"Ð","gcy":"Ð³","Gdot":"Ä ","gdot":"Ä¡","ge":"â¥","gE":"â§","gEl":"âª","gel":"â","geq":"â¥","geqq":"â§","geqslant":"â©¾","gescc":"âª©","ges":"â©¾","gesdot":"âª","gesdoto":"âª","gesdotol":"âª","gesl":"âï¸","gesles":"âª","Gfr":"ð","gfr":"ð¤","gg":"â«","Gg":"â","ggg":"â","gimel":"â·","GJcy":"Ð","gjcy":"Ñ","gla":"âª¥","gl":"â·","glE":"âª","glj":"âª¤","gnap":"âª","gnapprox":"âª","gne":"âª","gnE":"â©","gneq":"âª","gneqq":"â©","gnsim":"â§","Gopf":"ð¾","gopf":"ð","grave":"`","GreaterEqual":"â¥","GreaterEqualLess":"â","GreaterFullEqual":"â§","GreaterGreater":"âª¢","GreaterLess":"â·","GreaterSlantEqual":"â©¾","GreaterTilde":"â³","Gscr":"ð¢","gscr":"â","gsim":"â³","gsime":"âª","gsiml":"âª","gtcc":"âª§","gtcir":"â©º","gt":">","GT":">","Gt":"â«","gtdot":"â","gtlPar":"â¦","gtquest":"â©¼","gtrapprox":"âª","gtrarr":"â¥¸","gtrdot":"â","gtreqless":"â","gtreqqless":"âª","gtrless":"â·","gtrsim":"â³","gvertneqq":"â©ï¸","gvnE":"â©ï¸","Hacek":"Ë","hairsp":"â","half":"Â½","hamilt":"â","HARDcy":"Ðª","hardcy":"Ñ","harrcir":"â¥","harr":"â","hArr":"â","harrw":"â­","Hat":"^","hbar":"â","Hcirc":"Ä¤","hcirc":"Ä¥","hearts":"â¥","heartsuit":"â¥","hellip":"â¦","hercon":"â¹","hfr":"ð¥","Hfr":"â","HilbertSpace":"â","hksearow":"â¤¥","hkswarow":"â¤¦","hoarr":"â¿","homtht":"â»","hookleftarrow":"â©","hookrightarrow":"âª","hopf":"ð","Hopf":"â","horbar":"â","HorizontalLine":"â","hscr":"ð½","Hscr":"â","hslash":"â","Hstrok":"Ä¦","hstrok":"Ä§","HumpDownHump":"â","HumpEqual":"â","hybull":"â","hyphen":"â","Iacute":"Ã","iacute":"Ã­","ic":"â£","Icirc":"Ã","icirc":"Ã®","Icy":"Ð","icy":"Ð¸","Idot":"Ä°","IEcy":"Ð","iecy":"Ðµ","iexcl":"Â¡","iff":"â","ifr":"ð¦","Ifr":"â","Igrave":"Ã","igrave":"Ã¬","ii":"â","iiiint":"â¨","iiint":"â­","iinfin":"â§","iiota":"â©","IJlig":"Ä²","ijlig":"Ä³","Imacr":"Äª","imacr":"Ä«","image":"â","ImaginaryI":"â","imagline":"â","imagpart":"â","imath":"Ä±","Im":"â","imof":"â·","imped":"Æµ","Implies":"â","incare":"â","in":"â","infin":"â","infintie":"â§","inodot":"Ä±","intcal":"âº","int":"â«","Int":"â¬","integers":"â¤","Integral":"â«","intercal":"âº","Intersection":"â","intlarhk":"â¨","intprod":"â¨¼","InvisibleComma":"â£","InvisibleTimes":"â¢","IOcy":"Ð","iocy":"Ñ","Iogon":"Ä®","iogon":"Ä¯","Iopf":"ð","iopf":"ð","Iota":"Î","iota":"Î¹","iprod":"â¨¼","iquest":"Â¿","iscr":"ð¾","Iscr":"â","isin":"â","isindot":"âµ","isinE":"â¹","isins":"â´","isinsv":"â³","isinv":"â","it":"â¢","Itilde":"Ä¨","itilde":"Ä©","Iukcy":"Ð","iukcy":"Ñ","Iuml":"Ã","iuml":"Ã¯","Jcirc":"Ä´","jcirc":"Äµ","Jcy":"Ð","jcy":"Ð¹","Jfr":"ð","jfr":"ð§","jmath":"È·","Jopf":"ð","jopf":"ð","Jscr":"ð¥","jscr":"ð¿","Jsercy":"Ð","jsercy":"Ñ","Jukcy":"Ð","jukcy":"Ñ","Kappa":"Î","kappa":"Îº","kappav":"Ï°","Kcedil":"Ä¶","kcedil":"Ä·","Kcy":"Ð","kcy":"Ðº","Kfr":"ð","kfr":"ð¨","kgreen":"Ä¸","KHcy":"Ð¥","khcy":"Ñ","KJcy":"Ð","kjcy":"Ñ","Kopf":"ð","kopf":"ð","Kscr":"ð¦","kscr":"ð","lAarr":"â","Lacute":"Ä¹","lacute":"Äº","laemptyv":"â¦´","lagran":"â","Lambda":"Î","lambda":"Î»","lang":"â¨","Lang":"âª","langd":"â¦","langle":"â¨","lap":"âª","Laplacetrf":"â","laquo":"Â«","larrb":"â¤","larrbfs":"â¤","larr":"â","Larr":"â","lArr":"â","larrfs":"â¤","larrhk":"â©","larrlp":"â«","larrpl":"â¤¹","larrsim":"â¥³","larrtl":"â¢","latail":"â¤","lAtail":"â¤","lat":"âª«","late":"âª­","lates":"âª­ï¸","lbarr":"â¤","lBarr":"â¤","lbbrk":"â²","lbrace":"{","lbrack":"[","lbrke":"â¦","lbrksld":"â¦","lbrkslu":"â¦","Lcaron":"Ä½","lcaron":"Ä¾","Lcedil":"Ä»","lcedil":"Ä¼","lceil":"â","lcub":"{","Lcy":"Ð","lcy":"Ð»","ldca":"â¤¶","ldquo":"â","ldquor":"â","ldrdhar":"â¥§","ldrushar":"â¥","ldsh":"â²","le":"â¤","lE":"â¦","LeftAngleBracket":"â¨","LeftArrowBar":"â¤","leftarrow":"â","LeftArrow":"â","Leftarrow":"â","LeftArrowRightArrow":"â","leftarrowtail":"â¢","LeftCeiling":"â","LeftDoubleBracket":"â¦","LeftDownTeeVector":"â¥¡","LeftDownVectorBar":"â¥","LeftDownVector":"â","LeftFloor":"â","leftharpoondown":"â½","leftharpoonup":"â¼","leftleftarrows":"â","leftrightarrow":"â","LeftRightArrow":"â","Leftrightarrow":"â","leftrightarrows":"â","leftrightharpoons":"â","leftrightsquigarrow":"â­","LeftRightVector":"â¥","LeftTeeArrow":"â¤","LeftTee":"â£","LeftTeeVector":"â¥","leftthreetimes":"â","LeftTriangleBar":"â§","LeftTriangle":"â²","LeftTriangleEqual":"â´","LeftUpDownVector":"â¥","LeftUpTeeVector":"â¥ ","LeftUpVectorBar":"â¥","LeftUpVector":"â¿","LeftVectorBar":"â¥","LeftVector":"â¼","lEg":"âª","leg":"â","leq":"â¤","leqq":"â¦","leqslant":"â©½","lescc":"âª¨","les":"â©½","lesdot":"â©¿","lesdoto":"âª","lesdotor":"âª","lesg":"âï¸","lesges":"âª","lessapprox":"âª","lessdot":"â","lesseqgtr":"â","lesseqqgtr":"âª","LessEqualGreater":"â","LessFullEqual":"â¦","LessGreater":"â¶","lessgtr":"â¶","LessLess":"âª¡","lesssim":"â²","LessSlantEqual":"â©½","LessTilde":"â²","lfisht":"â¥¼","lfloor":"â","Lfr":"ð","lfr":"ð©","lg":"â¶","lgE":"âª","lHar":"â¥¢","lhard":"â½","lharu":"â¼","lharul":"â¥ª","lhblk":"â","LJcy":"Ð","ljcy":"Ñ","llarr":"â","ll":"âª","Ll":"â","llcorner":"â","Lleftarrow":"â","llhard":"â¥«","lltri":"âº","Lmidot":"Ä¿","lmidot":"Å","lmoustache":"â°","lmoust":"â°","lnap":"âª","lnapprox":"âª","lne":"âª","lnE":"â¨","lneq":"âª","lneqq":"â¨","lnsim":"â¦","loang":"â¬","loarr":"â½","lobrk":"â¦","longleftarrow":"âµ","LongLeftArrow":"âµ","Longleftarrow":"â¸","longleftrightarrow":"â·","LongLeftRightArrow":"â·","Longleftrightarrow":"âº","longmapsto":"â¼","longrightarrow":"â¶","LongRightArrow":"â¶","Longrightarrow":"â¹","looparrowleft":"â«","looparrowright":"â¬","lopar":"â¦","Lopf":"ð","lopf":"ð","loplus":"â¨­","lotimes":"â¨´","lowast":"â","lowbar":"_","LowerLeftArrow":"â","LowerRightArrow":"â","loz":"â","lozenge":"â","lozf":"â§«","lpar":"(","lparlt":"â¦","lrarr":"â","lrcorner":"â","lrhar":"â","lrhard":"â¥­","lrm":"â","lrtri":"â¿","lsaquo":"â¹","lscr":"ð","Lscr":"â","lsh":"â°","Lsh":"â°","lsim":"â²","lsime":"âª","lsimg":"âª","lsqb":"[","lsquo":"â","lsquor":"â","Lstrok":"Å","lstrok":"Å","ltcc":"âª¦","ltcir":"â©¹","lt":"<","LT":"<","Lt":"âª","ltdot":"â","lthree":"â","ltimes":"â","ltlarr":"â¥¶","ltquest":"â©»","ltri":"â","ltrie":"â´","ltrif":"â","ltrPar":"â¦","lurdshar":"â¥","luruhar":"â¥¦","lvertneqq":"â¨ï¸","lvnE":"â¨ï¸","macr":"Â¯","male":"â","malt":"â ","maltese":"â ","Map":"â¤","map":"â¦","mapsto":"â¦","mapstodown":"â§","mapstoleft":"â¤","mapstoup":"â¥","marker":"â®","mcomma":"â¨©","Mcy":"Ð","mcy":"Ð¼","mdash":"â","mDDot":"âº","measuredangle":"â¡","MediumSpace":"â","Mellintrf":"â³","Mfr":"ð","mfr":"ðª","mho":"â§","micro":"Âµ","midast":"*","midcir":"â«°","mid":"â£","middot":"Â·","minusb":"â","minus":"â","minusd":"â¸","minusdu":"â¨ª","MinusPlus":"â","mlcp":"â«","mldr":"â¦","mnplus":"â","models":"â§","Mopf":"ð","mopf":"ð","mp":"â","mscr":"ð","Mscr":"â³","mstpos":"â¾","Mu":"Î","mu":"Î¼","multimap":"â¸","mumap":"â¸","nabla":"â","Nacute":"Å","nacute":"Å","nang":"â â","nap":"â","napE":"â©°Ì¸","napid":"âÌ¸","napos":"Å","napprox":"â","natural":"â®","naturals":"â","natur":"â®","nbsp":"Â ","nbump":"âÌ¸","nbumpe":"âÌ¸","ncap":"â©","Ncaron":"Å","ncaron":"Å","Ncedil":"Å","ncedil":"Å","ncong":"â","ncongdot":"â©­Ì¸","ncup":"â©","Ncy":"Ð","ncy":"Ð½","ndash":"â","nearhk":"â¤¤","nearr":"â","neArr":"â","nearrow":"â","ne":"â ","nedot":"âÌ¸","NegativeMediumSpace":"â","NegativeThickSpace":"â","NegativeThinSpace":"â","NegativeVeryThinSpace":"â","nequiv":"â¢","nesear":"â¤¨","nesim":"âÌ¸","NestedGreaterGreater":"â«","NestedLessLess":"âª","NewLine":"\\n","nexist":"â","nexists":"â","Nfr":"ð","nfr":"ð«","ngE":"â§Ì¸","nge":"â±","ngeq":"â±","ngeqq":"â§Ì¸","ngeqslant":"â©¾Ì¸","nges":"â©¾Ì¸","nGg":"âÌ¸","ngsim":"âµ","nGt":"â«â","ngt":"â¯","ngtr":"â¯","nGtv":"â«Ì¸","nharr":"â®","nhArr":"â","nhpar":"â«²","ni":"â","nis":"â¼","nisd":"âº","niv":"â","NJcy":"Ð","njcy":"Ñ","nlarr":"â","nlArr":"â","nldr":"â¥","nlE":"â¦Ì¸","nle":"â°","nleftarrow":"â","nLeftarrow":"â","nleftrightarrow":"â®","nLeftrightarrow":"â","nleq":"â°","nleqq":"â¦Ì¸","nleqslant":"â©½Ì¸","nles":"â©½Ì¸","nless":"â®","nLl":"âÌ¸","nlsim":"â´","nLt":"âªâ","nlt":"â®","nltri":"âª","nltrie":"â¬","nLtv":"âªÌ¸","nmid":"â¤","NoBreak":"â ","NonBreakingSpace":"Â ","nopf":"ð","Nopf":"â","Not":"â«¬","not":"Â¬","NotCongruent":"â¢","NotCupCap":"â­","NotDoubleVerticalBar":"â¦","NotElement":"â","NotEqual":"â ","NotEqualTilde":"âÌ¸","NotExists":"â","NotGreater":"â¯","NotGreaterEqual":"â±","NotGreaterFullEqual":"â§Ì¸","NotGreaterGreater":"â«Ì¸","NotGreaterLess":"â¹","NotGreaterSlantEqual":"â©¾Ì¸","NotGreaterTilde":"âµ","NotHumpDownHump":"âÌ¸","NotHumpEqual":"âÌ¸","notin":"â","notindot":"âµÌ¸","notinE":"â¹Ì¸","notinva":"â","notinvb":"â·","notinvc":"â¶","NotLeftTriangleBar":"â§Ì¸","NotLeftTriangle":"âª","NotLeftTriangleEqual":"â¬","NotLess":"â®","NotLessEqual":"â°","NotLessGreater":"â¸","NotLessLess":"âªÌ¸","NotLessSlantEqual":"â©½Ì¸","NotLessTilde":"â´","NotNestedGreaterGreater":"âª¢Ì¸","NotNestedLessLess":"âª¡Ì¸","notni":"â","notniva":"â","notnivb":"â¾","notnivc":"â½","NotPrecedes":"â","NotPrecedesEqual":"âª¯Ì¸","NotPrecedesSlantEqual":"â ","NotReverseElement":"â","NotRightTriangleBar":"â§Ì¸","NotRightTriangle":"â«","NotRightTriangleEqual":"â­","NotSquareSubset":"âÌ¸","NotSquareSubsetEqual":"â¢","NotSquareSuperset":"âÌ¸","NotSquareSupersetEqual":"â£","NotSubset":"ââ","NotSubsetEqual":"â","NotSucceeds":"â","NotSucceedsEqual":"âª°Ì¸","NotSucceedsSlantEqual":"â¡","NotSucceedsTilde":"â¿Ì¸","NotSuperset":"ââ","NotSupersetEqual":"â","NotTilde":"â","NotTildeEqual":"â","NotTildeFullEqual":"â","NotTildeTilde":"â","NotVerticalBar":"â¤","nparallel":"â¦","npar":"â¦","nparsl":"â«½â¥","npart":"âÌ¸","npolint":"â¨","npr":"â","nprcue":"â ","nprec":"â","npreceq":"âª¯Ì¸","npre":"âª¯Ì¸","nrarrc":"â¤³Ì¸","nrarr":"â","nrArr":"â","nrarrw":"âÌ¸","nrightarrow":"â","nRightarrow":"â","nrtri":"â«","nrtrie":"â­","nsc":"â","nsccue":"â¡","nsce":"âª°Ì¸","Nscr":"ð©","nscr":"ð","nshortmid":"â¤","nshortparallel":"â¦","nsim":"â","nsime":"â","nsimeq":"â","nsmid":"â¤","nspar":"â¦","nsqsube":"â¢","nsqsupe":"â£","nsub":"â","nsubE":"â«Ì¸","nsube":"â","nsubset":"ââ","nsubseteq":"â","nsubseteqq":"â«Ì¸","nsucc":"â","nsucceq":"âª°Ì¸","nsup":"â","nsupE":"â«Ì¸","nsupe":"â","nsupset":"ââ","nsupseteq":"â","nsupseteqq":"â«Ì¸","ntgl":"â¹","Ntilde":"Ã","ntilde":"Ã±","ntlg":"â¸","ntriangleleft":"âª","ntrianglelefteq":"â¬","ntriangleright":"â«","ntrianglerighteq":"â­","Nu":"Î","nu":"Î½","num":"#","numero":"â","numsp":"â","nvap":"ââ","nvdash":"â¬","nvDash":"â­","nVdash":"â®","nVDash":"â¯","nvge":"â¥â","nvgt":">â","nvHarr":"â¤","nvinfin":"â§","nvlArr":"â¤","nvle":"â¤â","nvlt":"<â","nvltrie":"â´â","nvrArr":"â¤","nvrtrie":"âµâ","nvsim":"â¼â","nwarhk":"â¤£","nwarr":"â","nwArr":"â","nwarrow":"â","nwnear":"â¤§","Oacute":"Ã","oacute":"Ã³","oast":"â","Ocirc":"Ã","ocirc":"Ã´","ocir":"â","Ocy":"Ð","ocy":"Ð¾","odash":"â","Odblac":"Å","odblac":"Å","odiv":"â¨¸","odot":"â","odsold":"â¦¼","OElig":"Å","oelig":"Å","ofcir":"â¦¿","Ofr":"ð","ofr":"ð¬","ogon":"Ë","Ograve":"Ã","ograve":"Ã²","ogt":"â§","ohbar":"â¦µ","ohm":"Î©","oint":"â®","olarr":"âº","olcir":"â¦¾","olcross":"â¦»","oline":"â¾","olt":"â§","Omacr":"Å","omacr":"Å","Omega":"Î©","omega":"Ï","Omicron":"Î","omicron":"Î¿","omid":"â¦¶","ominus":"â","Oopf":"ð","oopf":"ð ","opar":"â¦·","OpenCurlyDoubleQuote":"â","OpenCurlyQuote":"â","operp":"â¦¹","oplus":"â","orarr":"â»","Or":"â©","or":"â¨","ord":"â©","order":"â´","orderof":"â´","ordf":"Âª","ordm":"Âº","origof":"â¶","oror":"â©","orslope":"â©","orv":"â©","oS":"â","Oscr":"ðª","oscr":"â´","Oslash":"Ã","oslash":"Ã¸","osol":"â","Otilde":"Ã","otilde":"Ãµ","otimesas":"â¨¶","Otimes":"â¨·","otimes":"â","Ouml":"Ã","ouml":"Ã¶","ovbar":"â½","OverBar":"â¾","OverBrace":"â","OverBracket":"â´","OverParenthesis":"â","para":"Â¶","parallel":"â¥","par":"â¥","parsim":"â«³","parsl":"â«½","part":"â","PartialD":"â","Pcy":"Ð","pcy":"Ð¿","percnt":"%","period":".","permil":"â°","perp":"â¥","pertenk":"â±","Pfr":"ð","pfr":"ð­","Phi":"Î¦","phi":"Ï","phiv":"Ï","phmmat":"â³","phone":"â","Pi":"Î ","pi":"Ï","pitchfork":"â","piv":"Ï","planck":"â","planckh":"â","plankv":"â","plusacir":"â¨£","plusb":"â","pluscir":"â¨¢","plus":"+","plusdo":"â","plusdu":"â¨¥","pluse":"â©²","PlusMinus":"Â±","plusmn":"Â±","plussim":"â¨¦","plustwo":"â¨§","pm":"Â±","Poincareplane":"â","pointint":"â¨","popf":"ð¡","Popf":"â","pound":"Â£","prap":"âª·","Pr":"âª»","pr":"âº","prcue":"â¼","precapprox":"âª·","prec":"âº","preccurlyeq":"â¼","Precedes":"âº","PrecedesEqual":"âª¯","PrecedesSlantEqual":"â¼","PrecedesTilde":"â¾","preceq":"âª¯","precnapprox":"âª¹","precneqq":"âªµ","precnsim":"â¨","pre":"âª¯","prE":"âª³","precsim":"â¾","prime":"â²","Prime":"â³","primes":"â","prnap":"âª¹","prnE":"âªµ","prnsim":"â¨","prod":"â","Product":"â","profalar":"â®","profline":"â","profsurf":"â","prop":"â","Proportional":"â","Proportion":"â·","propto":"â","prsim":"â¾","prurel":"â°","Pscr":"ð«","pscr":"ð","Psi":"Î¨","psi":"Ï","puncsp":"â","Qfr":"ð","qfr":"ð®","qint":"â¨","qopf":"ð¢","Qopf":"â","qprime":"â","Qscr":"ð¬","qscr":"ð","quaternions":"â","quatint":"â¨","quest":"?","questeq":"â","quot":"\\"","QUOT":"\\"","rAarr":"â","race":"â½Ì±","Racute":"Å","racute":"Å","radic":"â","raemptyv":"â¦³","rang":"â©","Rang":"â«","rangd":"â¦","range":"â¦¥","rangle":"â©","raquo":"Â»","rarrap":"â¥µ","rarrb":"â¥","rarrbfs":"â¤ ","rarrc":"â¤³","rarr":"â","Rarr":"â ","rArr":"â","rarrfs":"â¤","rarrhk":"âª","rarrlp":"â¬","rarrpl":"â¥","rarrsim":"â¥´","Rarrtl":"â¤","rarrtl":"â£","rarrw":"â","ratail":"â¤","rAtail":"â¤","ratio":"â¶","rationals":"â","rbarr":"â¤","rBarr":"â¤","RBarr":"â¤","rbbrk":"â³","rbrace":"}","rbrack":"]","rbrke":"â¦","rbrksld":"â¦","rbrkslu":"â¦","Rcaron":"Å","rcaron":"Å","Rcedil":"Å","rcedil":"Å","rceil":"â","rcub":"}","Rcy":"Ð ","rcy":"Ñ","rdca":"â¤·","rdldhar":"â¥©","rdquo":"â","rdquor":"â","rdsh":"â³","real":"â","realine":"â","realpart":"â","reals":"â","Re":"â","rect":"â­","reg":"Â®","REG":"Â®","ReverseElement":"â","ReverseEquilibrium":"â","ReverseUpEquilibrium":"â¥¯","rfisht":"â¥½","rfloor":"â","rfr":"ð¯","Rfr":"â","rHar":"â¥¤","rhard":"â","rharu":"â","rharul":"â¥¬","Rho":"Î¡","rho":"Ï","rhov":"Ï±","RightAngleBracket":"â©","RightArrowBar":"â¥","rightarrow":"â","RightArrow":"â","Rightarrow":"â","RightArrowLeftArrow":"â","rightarrowtail":"â£","RightCeiling":"â","RightDoubleBracket":"â§","RightDownTeeVector":"â¥","RightDownVectorBar":"â¥","RightDownVector":"â","RightFloor":"â","rightharpoondown":"â","rightharpoonup":"â","rightleftarrows":"â","rightleftharpoons":"â","rightrightarrows":"â","rightsquigarrow":"â","RightTeeArrow":"â¦","RightTee":"â¢","RightTeeVector":"â¥","rightthreetimes":"â","RightTriangleBar":"â§","RightTriangle":"â³","RightTriangleEqual":"âµ","RightUpDownVector":"â¥","RightUpTeeVector":"â¥","RightUpVectorBar":"â¥","RightUpVector":"â¾","RightVectorBar":"â¥","RightVector":"â","ring":"Ë","risingdotseq":"â","rlarr":"â","rlhar":"â","rlm":"â","rmoustache":"â±","rmoust":"â±","rnmid":"â«®","roang":"â­","roarr":"â¾","robrk":"â§","ropar":"â¦","ropf":"ð£","Ropf":"â","roplus":"â¨®","rotimes":"â¨µ","RoundImplies":"â¥°","rpar":")","rpargt":"â¦","rppolint":"â¨","rrarr":"â","Rrightarrow":"â","rsaquo":"âº","rscr":"ð","Rscr":"â","rsh":"â±","Rsh":"â±","rsqb":"]","rsquo":"â","rsquor":"â","rthree":"â","rtimes":"â","rtri":"â¹","rtrie":"âµ","rtrif":"â¸","rtriltri":"â§","RuleDelayed":"â§´","ruluhar":"â¥¨","rx":"â","Sacute":"Å","sacute":"Å","sbquo":"â","scap":"âª¸","Scaron":"Å ","scaron":"Å¡","Sc":"âª¼","sc":"â»","sccue":"â½","sce":"âª°","scE":"âª´","Scedil":"Å","scedil":"Å","Scirc":"Å","scirc":"Å","scnap":"âªº","scnE":"âª¶","scnsim":"â©","scpolint":"â¨","scsim":"â¿","Scy":"Ð¡","scy":"Ñ","sdotb":"â¡","sdot":"â","sdote":"â©¦","searhk":"â¤¥","searr":"â","seArr":"â","searrow":"â","sect":"Â§","semi":";","seswar":"â¤©","setminus":"â","setmn":"â","sext":"â¶","Sfr":"ð","sfr":"ð°","sfrown":"â¢","sharp":"â¯","SHCHcy":"Ð©","shchcy":"Ñ","SHcy":"Ð¨","shcy":"Ñ","ShortDownArrow":"â","ShortLeftArrow":"â","shortmid":"â£","shortparallel":"â¥","ShortRightArrow":"â","ShortUpArrow":"â","shy":"Â­","Sigma":"Î£","sigma":"Ï","sigmaf":"Ï","sigmav":"Ï","sim":"â¼","simdot":"â©ª","sime":"â","simeq":"â","simg":"âª","simgE":"âª ","siml":"âª","simlE":"âª","simne":"â","simplus":"â¨¤","simrarr":"â¥²","slarr":"â","SmallCircle":"â","smallsetminus":"â","smashp":"â¨³","smeparsl":"â§¤","smid":"â£","smile":"â£","smt":"âªª","smte":"âª¬","smtes":"âª¬ï¸","SOFTcy":"Ð¬","softcy":"Ñ","solbar":"â¿","solb":"â§","sol":"/","Sopf":"ð","sopf":"ð¤","spades":"â ","spadesuit":"â ","spar":"â¥","sqcap":"â","sqcaps":"âï¸","sqcup":"â","sqcups":"âï¸","Sqrt":"â","sqsub":"â","sqsube":"â","sqsubset":"â","sqsubseteq":"â","sqsup":"â","sqsupe":"â","sqsupset":"â","sqsupseteq":"â","square":"â¡","Square":"â¡","SquareIntersection":"â","SquareSubset":"â","SquareSubsetEqual":"â","SquareSuperset":"â","SquareSupersetEqual":"â","SquareUnion":"â","squarf":"âª","squ":"â¡","squf":"âª","srarr":"â","Sscr":"ð®","sscr":"ð","ssetmn":"â","ssmile":"â£","sstarf":"â","Star":"â","star":"â","starf":"â","straightepsilon":"Ïµ","straightphi":"Ï","strns":"Â¯","sub":"â","Sub":"â","subdot":"âª½","subE":"â«","sube":"â","subedot":"â«","submult":"â«","subnE":"â«","subne":"â","subplus":"âª¿","subrarr":"â¥¹","subset":"â","Subset":"â","subseteq":"â","subseteqq":"â«","SubsetEqual":"â","subsetneq":"â","subsetneqq":"â«","subsim":"â«","subsub":"â«","subsup":"â«","succapprox":"âª¸","succ":"â»","succcurlyeq":"â½","Succeeds":"â»","SucceedsEqual":"âª°","SucceedsSlantEqual":"â½","SucceedsTilde":"â¿","succeq":"âª°","succnapprox":"âªº","succneqq":"âª¶","succnsim":"â©","succsim":"â¿","SuchThat":"â","sum":"â","Sum":"â","sung":"âª","sup1":"Â¹","sup2":"Â²","sup3":"Â³","sup":"â","Sup":"â","supdot":"âª¾","supdsub":"â«","supE":"â«","supe":"â","supedot":"â«","Superset":"â","SupersetEqual":"â","suphsol":"â","suphsub":"â«","suplarr":"â¥»","supmult":"â«","supnE":"â«","supne":"â","supplus":"â«","supset":"â","Supset":"â","supseteq":"â","supseteqq":"â«","supsetneq":"â","supsetneqq":"â«","supsim":"â«","supsub":"â«","supsup":"â«","swarhk":"â¤¦","swarr":"â","swArr":"â","swarrow":"â","swnwar":"â¤ª","szlig":"Ã","Tab":"\\t","target":"â","Tau":"Î¤","tau":"Ï","tbrk":"â´","Tcaron":"Å¤","tcaron":"Å¥","Tcedil":"Å¢","tcedil":"Å£","Tcy":"Ð¢","tcy":"Ñ","tdot":"â","telrec":"â","Tfr":"ð","tfr":"ð±","there4":"â´","therefore":"â´","Therefore":"â´","Theta":"Î","theta":"Î¸","thetasym":"Ï","thetav":"Ï","thickapprox":"â","thicksim":"â¼","ThickSpace":"ââ","ThinSpace":"â","thinsp":"â","thkap":"â","thksim":"â¼","THORN":"Ã","thorn":"Ã¾","tilde":"Ë","Tilde":"â¼","TildeEqual":"â","TildeFullEqual":"â","TildeTilde":"â","timesbar":"â¨±","timesb":"â ","times":"Ã","timesd":"â¨°","tint":"â­","toea":"â¤¨","topbot":"â¶","topcir":"â«±","top":"â¤","Topf":"ð","topf":"ð¥","topfork":"â«","tosa":"â¤©","tprime":"â´","trade":"â¢","TRADE":"â¢","triangle":"âµ","triangledown":"â¿","triangleleft":"â","trianglelefteq":"â´","triangleq":"â","triangleright":"â¹","trianglerighteq":"âµ","tridot":"â¬","trie":"â","triminus":"â¨º","TripleDot":"â","triplus":"â¨¹","trisb":"â§","tritime":"â¨»","trpezium":"â¢","Tscr":"ð¯","tscr":"ð","TScy":"Ð¦","tscy":"Ñ","TSHcy":"Ð","tshcy":"Ñ","Tstrok":"Å¦","tstrok":"Å§","twixt":"â¬","twoheadleftarrow":"â","twoheadrightarrow":"â ","Uacute":"Ã","uacute":"Ãº","uarr":"â","Uarr":"â","uArr":"â","Uarrocir":"â¥","Ubrcy":"Ð","ubrcy":"Ñ","Ubreve":"Å¬","ubreve":"Å­","Ucirc":"Ã","ucirc":"Ã»","Ucy":"Ð£","ucy":"Ñ","udarr":"â","Udblac":"Å°","udblac":"Å±","udhar":"â¥®","ufisht":"â¥¾","Ufr":"ð","ufr":"ð²","Ugrave":"Ã","ugrave":"Ã¹","uHar":"â¥£","uharl":"â¿","uharr":"â¾","uhblk":"â","ulcorn":"â","ulcorner":"â","ulcrop":"â","ultri":"â¸","Umacr":"Åª","umacr":"Å«","uml":"Â¨","UnderBar":"_","UnderBrace":"â","UnderBracket":"âµ","UnderParenthesis":"â","Union":"â","UnionPlus":"â","Uogon":"Å²","uogon":"Å³","Uopf":"ð","uopf":"ð¦","UpArrowBar":"â¤","uparrow":"â","UpArrow":"â","Uparrow":"â","UpArrowDownArrow":"â","updownarrow":"â","UpDownArrow":"â","Updownarrow":"â","UpEquilibrium":"â¥®","upharpoonleft":"â¿","upharpoonright":"â¾","uplus":"â","UpperLeftArrow":"â","UpperRightArrow":"â","upsi":"Ï","Upsi":"Ï","upsih":"Ï","Upsilon":"Î¥","upsilon":"Ï","UpTeeArrow":"â¥","UpTee":"â¥","upuparrows":"â","urcorn":"â","urcorner":"â","urcrop":"â","Uring":"Å®","uring":"Å¯","urtri":"â¹","Uscr":"ð°","uscr":"ð","utdot":"â°","Utilde":"Å¨","utilde":"Å©","utri":"âµ","utrif":"â´","uuarr":"â","Uuml":"Ã","uuml":"Ã¼","uwangle":"â¦§","vangrt":"â¦","varepsilon":"Ïµ","varkappa":"Ï°","varnothing":"â","varphi":"Ï","varpi":"Ï","varpropto":"â","varr":"â","vArr":"â","varrho":"Ï±","varsigma":"Ï","varsubsetneq":"âï¸","varsubsetneqq":"â«ï¸","varsupsetneq":"âï¸","varsupsetneqq":"â«ï¸","vartheta":"Ï","vartriangleleft":"â²","vartriangleright":"â³","vBar":"â«¨","Vbar":"â««","vBarv":"â«©","Vcy":"Ð","vcy":"Ð²","vdash":"â¢","vDash":"â¨","Vdash":"â©","VDash":"â«","Vdashl":"â«¦","veebar":"â»","vee":"â¨","Vee":"â","veeeq":"â","vellip":"â®","verbar":"|","Verbar":"â","vert":"|","Vert":"â","VerticalBar":"â£","VerticalLine":"|","VerticalSeparator":"â","VerticalTilde":"â","VeryThinSpace":"â","Vfr":"ð","vfr":"ð³","vltri":"â²","vnsub":"ââ","vnsup":"ââ","Vopf":"ð","vopf":"ð§","vprop":"â","vrtri":"â³","Vscr":"ð±","vscr":"ð","vsubnE":"â«ï¸","vsubne":"âï¸","vsupnE":"â«ï¸","vsupne":"âï¸","Vvdash":"âª","vzigzag":"â¦","Wcirc":"Å´","wcirc":"Åµ","wedbar":"â©","wedge":"â§","Wedge":"â","wedgeq":"â","weierp":"â","Wfr":"ð","wfr":"ð´","Wopf":"ð","wopf":"ð¨","wp":"â","wr":"â","wreath":"â","Wscr":"ð²","wscr":"ð","xcap":"â","xcirc":"â¯","xcup":"â","xdtri":"â½","Xfr":"ð","xfr":"ðµ","xharr":"â·","xhArr":"âº","Xi":"Î","xi":"Î¾","xlarr":"âµ","xlArr":"â¸","xmap":"â¼","xnis":"â»","xodot":"â¨","Xopf":"ð","xopf":"ð©","xoplus":"â¨","xotime":"â¨","xrarr":"â¶","xrArr":"â¹","Xscr":"ð³","xscr":"ð","xsqcup":"â¨","xuplus":"â¨","xutri":"â³","xvee":"â","xwedge":"â","Yacute":"Ã","yacute":"Ã½","YAcy":"Ð¯","yacy":"Ñ","Ycirc":"Å¶","ycirc":"Å·","Ycy":"Ð«","ycy":"Ñ","yen":"Â¥","Yfr":"ð","yfr":"ð¶","YIcy":"Ð","yicy":"Ñ","Yopf":"ð","yopf":"ðª","Yscr":"ð´","yscr":"ð","YUcy":"Ð®","yucy":"Ñ","yuml":"Ã¿","Yuml":"Å¸","Zacute":"Å¹","zacute":"Åº","Zcaron":"Å½","zcaron":"Å¾","Zcy":"Ð","zcy":"Ð·","Zdot":"Å»","zdot":"Å¼","zeetrf":"â¨","ZeroWidthSpace":"â","Zeta":"Î","zeta":"Î¶","zfr":"ð·","Zfr":"â¨","ZHcy":"Ð","zhcy":"Ð¶","zigrarr":"â","zopf":"ð«","Zopf":"â¤","Zscr":"ðµ","zscr":"ð","zwj":"â","zwnj":"â"}')},187:t=>{"use strict";t.exports=JSON.parse('{"Aacute":"Ã","aacute":"Ã¡","Acirc":"Ã","acirc":"Ã¢","acute":"Â´","AElig":"Ã","aelig":"Ã¦","Agrave":"Ã","agrave":"Ã ","amp":"&","AMP":"&","Aring":"Ã","aring":"Ã¥","Atilde":"Ã","atilde":"Ã£","Auml":"Ã","auml":"Ã¤","brvbar":"Â¦","Ccedil":"Ã","ccedil":"Ã§","cedil":"Â¸","cent":"Â¢","copy":"Â©","COPY":"Â©","curren":"Â¤","deg":"Â°","divide":"Ã·","Eacute":"Ã","eacute":"Ã©","Ecirc":"Ã","ecirc":"Ãª","Egrave":"Ã","egrave":"Ã¨","ETH":"Ã","eth":"Ã°","Euml":"Ã","euml":"Ã«","frac12":"Â½","frac14":"Â¼","frac34":"Â¾","gt":">","GT":">","Iacute":"Ã","iacute":"Ã­","Icirc":"Ã","icirc":"Ã®","iexcl":"Â¡","Igrave":"Ã","igrave":"Ã¬","iquest":"Â¿","Iuml":"Ã","iuml":"Ã¯","laquo":"Â«","lt":"<","LT":"<","macr":"Â¯","micro":"Âµ","middot":"Â·","nbsp":"Â ","not":"Â¬","Ntilde":"Ã","ntilde":"Ã±","Oacute":"Ã","oacute":"Ã³","Ocirc":"Ã","ocirc":"Ã´","Ograve":"Ã","ograve":"Ã²","ordf":"Âª","ordm":"Âº","Oslash":"Ã","oslash":"Ã¸","Otilde":"Ã","otilde":"Ãµ","Ouml":"Ã","ouml":"Ã¶","para":"Â¶","plusmn":"Â±","pound":"Â£","quot":"\\"","QUOT":"\\"","raquo":"Â»","reg":"Â®","REG":"Â®","sect":"Â§","shy":"Â­","sup1":"Â¹","sup2":"Â²","sup3":"Â³","szlig":"Ã","THORN":"Ã","thorn":"Ã¾","times":"Ã","Uacute":"Ã","uacute":"Ãº","Ucirc":"Ã","ucirc":"Ã»","Ugrave":"Ã","ugrave":"Ã¹","uml":"Â¨","Uuml":"Ã","uuml":"Ã¼","Yacute":"Ã","yacute":"Ã½","yen":"Â¥","yuml":"Ã¿"}')},555:t=>{"use strict";t.exports=JSON.parse('{"amp":"&","apos":"\'","gt":">","lt":"<","quot":"\\""}')}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={id:n,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";var t=r(379),e=r.n(t),n=r(795),i=r.n(n),o=r(569),s=r.n(o),a=r(565),l=r.n(a),u=r(216),c=r.n(u),p=r(589),h=r.n(p),f=r(192),d={};d.styleTagTransform=h(),d.setAttributes=l(),d.insert=s().bind(null,"head"),d.domAPI=i(),d.insertStyleElement=c(),e()(f.Z,d),f.Z&&f.Z.locals&&f.Z.locals;const g=JSON.parse('{"1":{"question":"Do you believe there is something to discover in your personal or professional life?","answers":[{"text":"Personal","goto":"2"},{"text":"Professional","goto":"18"},{"text":"Both","goto":"2"}]},"2":{"question":"Are you experiencing pain or trauma?","answers":[{"text":"Yes","goto":"3"},{"text":"No","goto":"7"}]},"3":{"question":"Are you seeking a way to resolve past pain, dysfunction, or conflict?","answers":[{"text":"Yes","goto":"4"},{"text":"No","goto":"5"}]},"4":{"end":{"title":"Consider psychotherapy","text":"The focus is often on resolving difficulties arising from the past that hamper an individual\'s emotional functioning in the present, improving overall psychological functioning, and dealing with the present in more emotionally healthy ways.  You may find it helpful to know that ICF Members have received training to discern the differences between coaching and therapy and are obliged by our organization\'s Code of Ethics to refer prospective or current clients to therapists when appropriate."}},"5":{"question":"Do you seek action, accountability, and follow-through?","answers":[{"text":"Yes","goto":"7"},{"text":"No","goto":"6"}]},"6":{"end":{"title":"Consider coaching in the future","text":"Coaching might be the right fit for you in the future. To decide when the time is right, ask yourself the following questions:\\n\\n * What do I want to accomplish?\\n * Do I value collaboration, other viewpoints and new perspectives?\\n * Am I ready to devote time and energy to making real changes?"}},"7":{"question":"Would you like to increase self-confidence and enhance relationships, communication skills, and work/life balance?","answers":[{"text":"Yes","goto":"8"},{"text":"No","goto":"6"}]},"8":{"question":"Do you want lasting results to help you be a better person or leader?","answers":[{"text":"Yes","goto":"10"},{"text":"No","goto":"9"}]},"9":{"end":"No further action needed."},"10":{"question":"Do you want to design actions or solutions for yourself, or do you need someone else to create them for you?","answers":[{"text":"Design solutions for myself","goto":"15"},{"text":"Have solutions created for me","goto":"11"}]},"11":{"question":"Are you seeking someone to evaluate your situation and provide advice or feedback, based on their experience or expertise?","answers":[{"text":"Yes","goto":"12"},{"text":"No","goto":"6"}]},"12":{"question":"Are you looking for wisdom and guidance or an expert to identify, prescribe, and potentially implement solutions?","answers":[{"text":"Wisdom and guidance","goto":"13"},{"text":"Prescribe and implement","goto":"14"}]},"13":{"end":{"title":"Consider mentoring","text":"A mentor is an expert who provides wisdom and guidance based on his or her own experience. Mentoring may include advising, counseling and coaching."}},"14":{"end":{"title":"Consider consulting","text":"Individuals or organizations retain consultants for their expertise. While consulting approaches vary widely, the assumption is the consultant will diagnose problems and prescribe and, sometimes, implement solutions."}},"15":{"question":"Are you seeking a professional who can work with you to clarify your desires and design actions that will move you toward your goals?","answers":[{"text":"Yes","goto":"16"},{"text":"No","goto":"6"}]},"16":{"question":"Are you willing to devote time and energy to making changes?","answers":[{"text":"Yes","goto":"17"},{"text":"No","goto":"6"}]},"17":{"end":{"title":"Consider coaching","text":"A coach could be beneficial for you! ICF defines coaching as partnering with clients in a thought-provoking and creative process that inspires them to maximize their personal and professional potential. Coaches honor the client as the expert in his or her life and work and believe every client is creative and resourceful. The coach\'s responsibility is to:\\n\\n * Discover, clarify and align with what the client wants to achieve.  * Encourage client self-discovery.  * Elicit client-generated solutions and strategies.  * Hold the client responsible and accountable.\\n\\n This process helps clients dramatically improve their outlook on work and life, while developing leadership skills and unlocking potential."}},"18":{"question":"Do you want a flexible, customizable learning solution or will a set curriculum help you achieve your goals?","answers":[{"text":"Customized learning solution","goto":"20"},{"text":"Set curriculum","goto":"19"}]},"19":{"end":{"title":"Consider training","text":"Training programs are based on objectives set out by the trainer or instructor. Training also assumes a linear learning path that coincides with an established curriculum."}},"20":{"question":"Are you looking for increased productivity, time management, team effectiveness, and work performance?","answers":[{"text":"Yes","goto":"8"},{"text":"No","goto":"7"}]}}');var _,m,v,b,y,A,C,x={},w=[],k=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function D(t,e){for(var r in e)t[r]=e[r];return t}function E(t){var e=t.parentNode;e&&e.removeChild(t)}function S(t,e,r){var n,i,o,s={};for(o in e)"key"==o?n=e[o]:"ref"==o?i=e[o]:s[o]=e[o];if(arguments.length>2&&(s.children=arguments.length>3?_.call(arguments,2):r),"function"==typeof t&&null!=t.defaultProps)for(o in t.defaultProps)void 0===s[o]&&(s[o]=t.defaultProps[o]);return q(t,s,n,i,null)}function q(t,e,r,n,i){var o={type:t,props:e,key:r,ref:n,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==i?++v:i};return null==i&&null!=m.vnode&&m.vnode(o),o}function L(t){return t.children}function F(t,e){this.props=t,this.context=e}function N(t,e){if(null==e)return t.__?N(t.__,t.__.__k.indexOf(t)+1):null;for(var r;e<t.__k.length;e++)if(null!=(r=t.__k[e])&&null!=r.__e)return r.__e;return"function"==typeof t.type?N(t):null}function O(t){var e,r;if(null!=(t=t.__)&&null!=t.__c){for(t.__e=t.__c.base=null,e=0;e<t.__k.length;e++)if(null!=(r=t.__k[e])&&null!=r.__e){t.__e=t.__c.base=r.__e;break}return O(t)}}function T(t){(!t.__d&&(t.__d=!0)&&b.push(t)&&!B.__r++||A!==m.debounceRendering)&&((A=m.debounceRendering)||y)(B)}function B(){for(var t;B.__r=b.length;)t=b.sort((function(t,e){return t.__v.__b-e.__v.__b})),b=[],t.some((function(t){var e,r,n,i,o,s;t.__d&&(o=(i=(e=t).__v).__e,(s=e.__P)&&(r=[],(n=D({},i)).__v=i.__v+1,V(s,i,n,e.__n,void 0!==s.ownerSVGElement,null!=i.__h?[o]:null,r,null==o?N(i):o,i.__h),$(r,i),i.__e!=o&&O(i)))}))}function P(t,e,r,n,i,o,s,a,l,u){var c,p,h,f,d,g,_,m=n&&n.__k||w,v=m.length;for(r.__k=[],c=0;c<e.length;c++)if(null!=(f=r.__k[c]=null==(f=e[c])||"boolean"==typeof f?null:"string"==typeof f||"number"==typeof f||"bigint"==typeof f?q(null,f,null,null,f):Array.isArray(f)?q(L,{children:f},null,null,null):f.__b>0?q(f.type,f.props,f.key,null,f.__v):f)){if(f.__=r,f.__b=r.__b+1,null===(h=m[c])||h&&f.key==h.key&&f.type===h.type)m[c]=void 0;else for(p=0;p<v;p++){if((h=m[p])&&f.key==h.key&&f.type===h.type){m[p]=void 0;break}h=null}V(t,f,h=h||x,i,o,s,a,l,u),d=f.__e,(p=f.ref)&&h.ref!=p&&(_||(_=[]),h.ref&&_.push(h.ref,null,f),_.push(p,f.__c||d,f)),null!=d?(null==g&&(g=d),"function"==typeof f.type&&f.__k===h.__k?f.__d=l=R(f,l,t):l=j(t,f,h,m,d,l),"function"==typeof r.type&&(r.__d=l)):l&&h.__e==l&&l.parentNode!=t&&(l=N(h))}for(r.__e=g,c=v;c--;)null!=m[c]&&("function"==typeof r.type&&null!=m[c].__e&&m[c].__e==r.__d&&(r.__d=N(n,c+1)),Z(m[c],m[c]));if(_)for(c=0;c<_.length;c++)W(_[c],_[++c],_[++c])}function R(t,e,r){for(var n,i=t.__k,o=0;i&&o<i.length;o++)(n=i[o])&&(n.__=t,e="function"==typeof n.type?R(n,e,r):j(r,n,n,i,n.__e,e));return e}function U(t,e){return e=e||[],null==t||"boolean"==typeof t||(Array.isArray(t)?t.some((function(t){U(t,e)})):e.push(t)),e}function j(t,e,r,n,i,o){var s,a,l;if(void 0!==e.__d)s=e.__d,e.__d=void 0;else if(null==r||i!=o||null==i.parentNode)t:if(null==o||o.parentNode!==t)t.appendChild(i),s=null;else{for(a=o,l=0;(a=a.nextSibling)&&l<n.length;l+=2)if(a==i)break t;t.insertBefore(i,o),s=o}return void 0!==s?s:i.nextSibling}function I(t,e,r){"-"===e[0]?t.setProperty(e,r):t[e]=null==r?"":"number"!=typeof r||k.test(e)?r:r+"px"}function z(t,e,r,n,i){var o;t:if("style"===e)if("string"==typeof r)t.style.cssText=r;else{if("string"==typeof n&&(t.style.cssText=n=""),n)for(e in n)r&&e in r||I(t.style,e,"");if(r)for(e in r)n&&r[e]===n[e]||I(t.style,e,r[e])}else if("o"===e[0]&&"n"===e[1])o=e!==(e=e.replace(/Capture$/,"")),e=e.toLowerCase()in t?e.toLowerCase().slice(2):e.slice(2),t.l||(t.l={}),t.l[e+o]=r,r?n||t.addEventListener(e,o?M:H,o):t.removeEventListener(e,o?M:H,o);else if("dangerouslySetInnerHTML"!==e){if(i)e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if("href"!==e&&"list"!==e&&"form"!==e&&"tabIndex"!==e&&"download"!==e&&e in t)try{t[e]=null==r?"":r;break t}catch(t){}"function"==typeof r||(null!=r&&(!1!==r||"a"===e[0]&&"r"===e[1])?t.setAttribute(e,r):t.removeAttribute(e))}}function H(t){this.l[t.type+!1](m.event?m.event(t):t)}function M(t){this.l[t.type+!0](m.event?m.event(t):t)}function V(t,e,r,n,i,o,s,a,l){var u,c,p,h,f,d,g,_,v,b,y,A=e.type;if(void 0!==e.constructor)return null;null!=r.__h&&(l=r.__h,a=e.__e=r.__e,e.__h=null,o=[a]),(u=m.__b)&&u(e);try{t:if("function"==typeof A){if(_=e.props,v=(u=A.contextType)&&n[u.__c],b=u?v?v.props.value:u.__:n,r.__c?g=(c=e.__c=r.__c).__=c.__E:("prototype"in A&&A.prototype.render?e.__c=c=new A(_,b):(e.__c=c=new F(_,b),c.constructor=A,c.render=Y),v&&v.sub(c),c.props=_,c.state||(c.state={}),c.context=b,c.__n=n,p=c.__d=!0,c.__h=[]),null==c.__s&&(c.__s=c.state),null!=A.getDerivedStateFromProps&&(c.__s==c.state&&(c.__s=D({},c.__s)),D(c.__s,A.getDerivedStateFromProps(_,c.__s))),h=c.props,f=c.state,p)null==A.getDerivedStateFromProps&&null!=c.componentWillMount&&c.componentWillMount(),null!=c.componentDidMount&&c.__h.push(c.componentDidMount);else{if(null==A.getDerivedStateFromProps&&_!==h&&null!=c.componentWillReceiveProps&&c.componentWillReceiveProps(_,b),!c.__e&&null!=c.shouldComponentUpdate&&!1===c.shouldComponentUpdate(_,c.__s,b)||e.__v===r.__v){c.props=_,c.state=c.__s,e.__v!==r.__v&&(c.__d=!1),c.__v=e,e.__e=r.__e,e.__k=r.__k,e.__k.forEach((function(t){t&&(t.__=e)})),c.__h.length&&s.push(c);break t}null!=c.componentWillUpdate&&c.componentWillUpdate(_,c.__s,b),null!=c.componentDidUpdate&&c.__h.push((function(){c.componentDidUpdate(h,f,d)}))}c.context=b,c.props=_,c.state=c.__s,(u=m.__r)&&u(e),c.__d=!1,c.__v=e,c.__P=t,u=c.render(c.props,c.state,c.context),c.state=c.__s,null!=c.getChildContext&&(n=D(D({},n),c.getChildContext())),p||null==c.getSnapshotBeforeUpdate||(d=c.getSnapshotBeforeUpdate(h,f)),y=null!=u&&u.type===L&&null==u.key?u.props.children:u,P(t,Array.isArray(y)?y:[y],e,r,n,i,o,s,a,l),c.base=e.__e,e.__h=null,c.__h.length&&s.push(c),g&&(c.__E=c.__=null),c.__e=!1}else null==o&&e.__v===r.__v?(e.__k=r.__k,e.__e=r.__e):e.__e=G(r.__e,e,r,n,i,o,s,l);(u=m.diffed)&&u(e)}catch(t){e.__v=null,(l||null!=o)&&(e.__e=a,e.__h=!!l,o[o.indexOf(a)]=null),m.__e(t,e,r)}}function $(t,e){m.__c&&m.__c(e,t),t.some((function(e){try{t=e.__h,e.__h=[],t.some((function(t){t.call(e)}))}catch(t){m.__e(t,e.__v)}}))}function G(t,e,r,n,i,o,s,a){var l,u,c,p=r.props,h=e.props,f=e.type,d=0;if("svg"===f&&(i=!0),null!=o)for(;d<o.length;d++)if((l=o[d])&&"setAttribute"in l==!!f&&(f?l.localName===f:3===l.nodeType)){t=l,o[d]=null;break}if(null==t){if(null===f)return document.createTextNode(h);t=i?document.createElementNS("http://www.w3.org/2000/svg",f):document.createElement(f,h.is&&h),o=null,a=!1}if(null===f)p===h||a&&t.data===h||(t.data=h);else{if(o=o&&_.call(t.childNodes),u=(p=r.props||x).dangerouslySetInnerHTML,c=h.dangerouslySetInnerHTML,!a){if(null!=o)for(p={},d=0;d<t.attributes.length;d++)p[t.attributes[d].name]=t.attributes[d].value;(c||u)&&(c&&(u&&c.__html==u.__html||c.__html===t.innerHTML)||(t.innerHTML=c&&c.__html||""))}if(function(t,e,r,n,i){var o;for(o in r)"children"===o||"key"===o||o in e||z(t,o,null,r[o],n);for(o in e)i&&"function"!=typeof e[o]||"children"===o||"key"===o||"value"===o||"checked"===o||r[o]===e[o]||z(t,o,e[o],r[o],n)}(t,h,p,i,a),c)e.__k=[];else if(d=e.props.children,P(t,Array.isArray(d)?d:[d],e,r,n,i&&"foreignObject"!==f,o,s,o?o[0]:r.__k&&N(r,0),a),null!=o)for(d=o.length;d--;)null!=o[d]&&E(o[d]);a||("value"in h&&void 0!==(d=h.value)&&(d!==t.value||"progress"===f&&!d||"option"===f&&d!==p.value)&&z(t,"value",d,p.value,!1),"checked"in h&&void 0!==(d=h.checked)&&d!==t.checked&&z(t,"checked",d,p.checked,!1))}return t}function W(t,e,r){try{"function"==typeof t?t(e):t.current=e}catch(t){m.__e(t,r)}}function Z(t,e,r){var n,i;if(m.unmount&&m.unmount(t),(n=t.ref)&&(n.current&&n.current!==t.__e||W(n,null,e)),null!=(n=t.__c)){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(t){m.__e(t,e)}n.base=n.__P=null}if(n=t.__k)for(i=0;i<n.length;i++)n[i]&&Z(n[i],e,"function"!=typeof t.type);r||null==t.__e||E(t.__e),t.__e=t.__d=void 0}function Y(t,e,r){return this.constructor(t,r)}function J(t,e,r){var n,i,o;m.__&&m.__(t,e),i=(n="function"==typeof r)?null:r&&r.__k||e.__k,o=[],V(e,t=(!n&&r||e).__k=S(L,null,[t]),i||x,x,void 0!==e.ownerSVGElement,!n&&r?[r]:i?null:e.firstChild?_.call(e.childNodes):null,o,!n&&r?r:i?i.__e:e.firstChild,n),$(o,t)}_=w.slice,m={__e:function(t,e,r,n){for(var i,o,s;e=e.__;)if((i=e.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(t)),s=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(t,n||{}),s=i.__d),s)return i.__E=i}catch(e){t=e}throw t}},v=0,F.prototype.setState=function(t,e){var r;r=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=D({},this.state),"function"==typeof t&&(t=t(D({},r),this.props)),t&&D(r,t),null!=t&&this.__v&&(e&&this.__h.push(e),T(this))},F.prototype.forceUpdate=function(t){this.__v&&(this.__e=!0,t&&this.__h.push(t),T(this))},F.prototype.render=L,b=[],y="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,B.__r=0,C=0;var K,X,Q,tt=function(t,e,r,n){var i;e[0]=0;for(var o=1;o<e.length;o++){var s=e[o++],a=e[o]?(e[0]|=s?1:2,r[e[o++]]):e[++o];3===s?n[0]=a:4===s?n[1]=Object.assign(n[1]||{},a):5===s?(n[1]=n[1]||{})[e[++o]]=a:6===s?n[1][e[++o]]+=a+"":s?(i=t.apply(a,tt(t,a,r,["",null])),n.push(i),a[0]?e[0]|=2:(e[o-2]=0,e[o]=i)):n.push(a)}return n},et=new Map,rt=function(t){var e=et.get(this);return e||(e=new Map,et.set(this,e)),(e=tt(this,e.get(t)||(e.set(t,e=function(t){for(var e,r,n=1,i="",o="",s=[0],a=function(t){1===n&&(t||(i=i.replace(/^\s*\n\s*|\s*\n\s*$/g,"")))?s.push(0,t,i):3===n&&(t||i)?(s.push(3,t,i),n=2):2===n&&"..."===i&&t?s.push(4,t,0):2===n&&i&&!t?s.push(5,0,!0,i):n>=5&&((i||!t&&5===n)&&(s.push(n,0,i,r),n=6),t&&(s.push(n,t,0,r),n=6)),i=""},l=0;l<t.length;l++){l&&(1===n&&a(),a(l));for(var u=0;u<t[l].length;u++)e=t[l][u],1===n?"<"===e?(a(),s=[s],n=3):i+=e:4===n?"--"===i&&">"===e?(n=1,i=""):i=e+i[0]:o?e===o?o="":i+=e:'"'===e||"'"===e?o=e:">"===e?(a(),n=1):n&&("="===e?(n=5,r=i,i=""):"/"===e&&(n<5||">"===t[l][u+1])?(a(),3===n&&(s=s[0]),n=s,(s=s[0]).push(2,0,n),n=0):" "===e||"\t"===e||"\n"===e||"\r"===e?(a(),n=2):i+=e),3===n&&"!--"===i&&(n=4,s=s[0])}return a(),s}(t)),e),arguments,[])).length>1?e:e[0]}.bind(S),nt=r(991),it=r.n(nt),ot=0,st=[],at=m.__b,lt=m.__r,ut=m.diffed,ct=m.__c,pt=m.unmount;function ht(t,e){m.__h&&m.__h(X,t,ot||e),ot=0;var r=X.__H||(X.__H={__:[],__h:[]});return t>=r.__.length&&r.__.push({}),r.__[t]}function ft(t){return ot=1,dt(xt,t)}function dt(t,e,r){var n=ht(K++,2);return n.t=t,n.__c||(n.__=[r?r(e):xt(void 0,e),function(t){var e=n.t(n.__[0],t);n.__[0]!==e&&(n.__=[e,n.__[1]],n.__c.setState({}))}],n.__c=X),n.__}function gt(t,e){var r=ht(K++,3);!m.__s&&Ct(r.__H,e)&&(r.__=t,r.__H=e,X.__H.__h.push(r))}function _t(t){return ot=5,mt((function(){return{current:t}}),[])}function mt(t,e){var r=ht(K++,7);return Ct(r.__H,e)&&(r.__=t(),r.__H=e,r.__h=t),r.__}function vt(){for(var t;t=st.shift();)if(t.__P)try{t.__H.__h.forEach(yt),t.__H.__h.forEach(At),t.__H.__h=[]}catch(e){t.__H.__h=[],m.__e(e,t.__v)}}m.__b=function(t){X=null,at&&at(t)},m.__r=function(t){lt&&lt(t),K=0;var e=(X=t.__c).__H;e&&(e.__h.forEach(yt),e.__h.forEach(At),e.__h=[])},m.diffed=function(t){ut&&ut(t);var e=t.__c;e&&e.__H&&e.__H.__h.length&&(1!==st.push(e)&&Q===m.requestAnimationFrame||((Q=m.requestAnimationFrame)||function(t){var e,r=function(){clearTimeout(n),bt&&cancelAnimationFrame(e),setTimeout(t)},n=setTimeout(r,100);bt&&(e=requestAnimationFrame(r))})(vt)),X=null},m.__c=function(t,e){e.some((function(t){try{t.__h.forEach(yt),t.__h=t.__h.filter((function(t){return!t.__||At(t)}))}catch(r){e.some((function(t){t.__h&&(t.__h=[])})),e=[],m.__e(r,t.__v)}})),ct&&ct(t,e)},m.unmount=function(t){pt&&pt(t);var e,r=t.__c;r&&r.__H&&(r.__H.__.forEach((function(t){try{yt(t)}catch(t){e=t}})),e&&m.__e(e,r.__v))};var bt="function"==typeof requestAnimationFrame;function yt(t){var e=X,r=t.__c;"function"==typeof r&&(t.__c=void 0,r()),X=e}function At(t){var e=X;t.__c=t.__(),X=e}function Ct(t,e){return!t||t.length!==e.length||e.some((function(e,r){return e!==t[r]}))}function xt(t,e){return"function"==typeof e?e(t):e}function wt(t,e){for(var r in e)t[r]=e[r];return t}function kt(t,e){for(var r in t)if("__source"!==r&&!(r in e))return!0;for(var n in e)if("__source"!==n&&t[n]!==e[n])return!0;return!1}function Dt(t){this.props=t}(Dt.prototype=new F).isPureReactComponent=!0,Dt.prototype.shouldComponentUpdate=function(t,e){return kt(this.props,t)||kt(this.state,e)};var Et=m.__b;m.__b=function(t){t.type&&t.type.__f&&t.ref&&(t.props.ref=t.ref,t.ref=null),Et&&Et(t)};"undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.forward_ref");var St=m.__e;m.__e=function(t,e,r,n){if(t.then)for(var i,o=e;o=o.__;)if((i=o.__c)&&i.__c)return null==e.__e&&(e.__e=r.__e,e.__k=r.__k),i.__c(t,e);St(t,e,r,n)};var qt=m.unmount;function Lt(){this.__u=0,this.t=null,this.__b=null}function Ft(t){var e=t.__.__c;return e&&e.__e&&e.__e(t)}function Nt(){this.u=null,this.o=null}m.unmount=function(t){var e=t.__c;e&&e.__R&&e.__R(),e&&!0===t.__h&&(t.type=null),qt&&qt(t)},(Lt.prototype=new F).__c=function(t,e){var r=e.__c,n=this;null==n.t&&(n.t=[]),n.t.push(r);var i=Ft(n.__v),o=!1,s=function(){o||(o=!0,r.__R=null,i?i(a):a())};r.__R=s;var a=function(){if(!--n.__u){if(n.state.__e){var t=n.state.__e;n.__v.__k[0]=function t(e,r,n){return e&&(e.__v=null,e.__k=e.__k&&e.__k.map((function(e){return t(e,r,n)})),e.__c&&e.__c.__P===r&&(e.__e&&n.insertBefore(e.__e,e.__d),e.__c.__e=!0,e.__c.__P=n)),e}(t,t.__c.__P,t.__c.__O)}var e;for(n.setState({__e:n.__b=null});e=n.t.pop();)e.forceUpdate()}},l=!0===e.__h;n.__u++||l||n.setState({__e:n.__b=n.__v.__k[0]}),t.then(s,s)},Lt.prototype.componentWillUnmount=function(){this.t=[]},Lt.prototype.render=function(t,e){if(this.__b){if(this.__v.__k){var r=document.createElement("div"),n=this.__v.__k[0].__c;this.__v.__k[0]=function t(e,r,n){return e&&(e.__c&&e.__c.__H&&(e.__c.__H.__.forEach((function(t){"function"==typeof t.__c&&t.__c()})),e.__c.__H=null),null!=(e=wt({},e)).__c&&(e.__c.__P===n&&(e.__c.__P=r),e.__c=null),e.__k=e.__k&&e.__k.map((function(e){return t(e,r,n)}))),e}(this.__b,r,n.__O=n.__P)}this.__b=null}var i=e.__e&&S(L,null,t.fallback);return i&&(i.__h=null),[S(L,null,e.__e?null:t.children),i]};var Ot=function(t,e,r){if(++r[1]===r[0]&&t.o.delete(e),t.props.revealOrder&&("t"!==t.props.revealOrder[0]||!t.o.size))for(r=t.u;r;){for(;r.length>3;)r.pop()();if(r[1]<r[0])break;t.u=r=r[2]}};(Nt.prototype=new F).__e=function(t){var e=this,r=Ft(e.__v),n=e.o.get(t);return n[0]++,function(i){var o=function(){e.props.revealOrder?(n.push(i),Ot(e,t,n)):i()};r?r(o):o()}},Nt.prototype.render=function(t){this.u=null,this.o=new Map;var e=U(t.children);t.revealOrder&&"b"===t.revealOrder[0]&&e.reverse();for(var r=e.length;r--;)this.o.set(e[r],this.u=[1,0,this.u]);return t.children},Nt.prototype.componentDidUpdate=Nt.prototype.componentDidMount=function(){var t=this;this.o.forEach((function(e,r){Ot(t,r,e)}))};var Tt="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,Bt=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,Pt="undefined"!=typeof document,Rt=function(t){return("undefined"!=typeof Symbol&&"symbol"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(t)};F.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach((function(t){Object.defineProperty(F.prototype,t,{configurable:!0,get:function(){return this["UNSAFE_"+t]},set:function(e){Object.defineProperty(this,t,{configurable:!0,writable:!0,value:e})}})}));var Ut=m.event;function jt(){}function It(){return this.cancelBubble}function zt(){return this.defaultPrevented}m.event=function(t){return Ut&&(t=Ut(t)),t.persist=jt,t.isPropagationStopped=It,t.isDefaultPrevented=zt,t.nativeEvent=t};var Ht={configurable:!0,get:function(){return this.class}},Mt=m.vnode;m.vnode=function(t){var e=t.type,r=t.props,n=r;if("string"==typeof e){var i=-1===e.indexOf("-");for(var o in n={},r){var s=r[o];Pt&&"children"===o&&"noscript"===e||"value"===o&&"defaultValue"in r&&null==s||("defaultValue"===o&&"value"in r&&null==r.value?o="value":"download"===o&&!0===s?s="":/ondoubleclick/i.test(o)?o="ondblclick":/^onchange(textarea|input)/i.test(o+e)&&!Rt(r.type)?o="oninput":/^onfocus$/i.test(o)?o="onfocusin":/^onblur$/i.test(o)?o="onfocusout":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(o)?o=o.toLowerCase():i&&Bt.test(o)?o=o.replace(/[A-Z0-9]/,"-$&").toLowerCase():null===s&&(s=void 0),n[o]=s)}"select"==e&&n.multiple&&Array.isArray(n.value)&&(n.value=U(r.children).forEach((function(t){t.props.selected=-1!=n.value.indexOf(t.props.value)}))),"select"==e&&null!=n.defaultValue&&(n.value=U(r.children).forEach((function(t){t.props.selected=n.multiple?-1!=n.defaultValue.indexOf(t.props.value):n.defaultValue==t.props.value}))),t.props=n,r.class!=r.className&&(Ht.enumerable="className"in r,null!=r.className&&(n.class=r.className),Object.defineProperty(n,"className",Ht))}t.$$typeof=Tt,Mt&&Mt(t)};var Vt=m.__r;m.__r=function(t){Vt&&Vt(t),t.__c};const $t=function(t,e){var r={__c:e="__cC"+C++,__:t,Consumer:function(t,e){return t.children(e)},Provider:function(t){var r,n;return this.getChildContext||(r=[],(n={})[e]=this,this.getChildContext=function(){return n},this.shouldComponentUpdate=function(t){this.props.value!==t.value&&r.some(T)},this.sub=function(t){r.push(t);var e=t.componentWillUnmount;t.componentWillUnmount=function(){r.splice(r.indexOf(t),1),e&&e.call(t)}}),t.children}};return r.Provider.__=r.Consumer.contextType=r};function Gt(t){for(var e=arguments.length,r=Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+t+(r.length?" "+r.map((function(t){return"'"+t+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function Wt(t){return!!t&&!!t[Ne]}function Zt(t){return!!t&&(function(t){if(!t||"object"!=typeof t)return!1;var e=Object.getPrototypeOf(t);if(null===e)return!0;var r=Object.hasOwnProperty.call(e,"constructor")&&e.constructor;return r===Object||"function"==typeof r&&Function.toString.call(r)===Oe}(t)||Array.isArray(t)||!!t[Fe]||!!t.constructor[Fe]||te(t)||ee(t))}function Yt(t,e,r){void 0===r&&(r=!1),0===Jt(t)?(r?Object.keys:Te)(t).forEach((function(n){r&&"symbol"==typeof n||e(n,t[n],t)})):t.forEach((function(r,n){return e(n,r,t)}))}function Jt(t){var e=t[Ne];return e?e.i>3?e.i-4:e.i:Array.isArray(t)?1:te(t)?2:ee(t)?3:0}function Kt(t,e){return 2===Jt(t)?t.has(e):Object.prototype.hasOwnProperty.call(t,e)}function Xt(t,e){return 2===Jt(t)?t.get(e):t[e]}function Qt(t,e,r){var n=Jt(t);2===n?t.set(e,r):3===n?(t.delete(e),t.add(r)):t[e]=r}function te(t){return Ee&&t instanceof Map}function ee(t){return Se&&t instanceof Set}function re(t){return t.o||t.t}function ne(t){if(Array.isArray(t))return Array.prototype.slice.call(t);var e=Be(t);delete e[Ne];for(var r=Te(e),n=0;n<r.length;n++){var i=r[n],o=e[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(e[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:t[i]})}return Object.create(Object.getPrototypeOf(t),e)}function ie(t,e){return void 0===e&&(e=!1),se(t)||Wt(t)||!Zt(t)||(Jt(t)>1&&(t.set=t.add=t.clear=t.delete=oe),Object.freeze(t),e&&Yt(t,(function(t,e){return ie(e,!0)}),!0)),t}function oe(){Gt(2)}function se(t){return null==t||"object"!=typeof t||Object.isFrozen(t)}function ae(t){var e=Pe[t];return e||Gt(18,t),e}function le(){return ke}function ue(t,e){e&&(ae("Patches"),t.u=[],t.s=[],t.v=e)}function ce(t){pe(t),t.p.forEach(fe),t.p=null}function pe(t){t===ke&&(ke=t.l)}function he(t){return ke={p:[],l:ke,h:t,m:!0,_:0}}function fe(t){var e=t[Ne];0===e.i||1===e.i?e.j():e.O=!0}function de(t,e){e._=e.p.length;var r=e.p[0],n=void 0!==t&&t!==r;return e.h.g||ae("ES5").S(e,t,n),n?(r[Ne].P&&(ce(e),Gt(4)),Zt(t)&&(t=ge(e,t),e.l||me(e,t)),e.u&&ae("Patches").M(r[Ne].t,t,e.u,e.s)):t=ge(e,r,[]),ce(e),e.u&&e.v(e.u,e.s),t!==Le?t:void 0}function ge(t,e,r){if(se(e))return e;var n=e[Ne];if(!n)return Yt(e,(function(i,o){return _e(t,n,e,i,o,r)}),!0),e;if(n.A!==t)return e;if(!n.P)return me(t,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var i=4===n.i||5===n.i?n.o=ne(n.k):n.o;Yt(3===n.i?new Set(i):i,(function(e,o){return _e(t,n,i,e,o,r)})),me(t,i,!1),r&&t.u&&ae("Patches").R(n,r,t.u,t.s)}return n.o}function _e(t,e,r,n,i,o){if(Wt(i)){var s=ge(t,i,o&&e&&3!==e.i&&!Kt(e.D,n)?o.concat(n):void 0);if(Qt(r,n,s),!Wt(s))return;t.m=!1}if(Zt(i)&&!se(i)){if(!t.h.F&&t._<1)return;ge(t,i),e&&e.A.l||me(t,i)}}function me(t,e,r){void 0===r&&(r=!1),t.h.F&&t.m&&ie(e,r)}function ve(t,e){var r=t[Ne];return(r?re(r):t)[e]}function be(t,e){if(e in t)for(var r=Object.getPrototypeOf(t);r;){var n=Object.getOwnPropertyDescriptor(r,e);if(n)return n;r=Object.getPrototypeOf(r)}}function ye(t){t.P||(t.P=!0,t.l&&ye(t.l))}function Ae(t){t.o||(t.o=ne(t.t))}function Ce(t,e,r){var n=te(e)?ae("MapSet").N(e,r):ee(e)?ae("MapSet").T(e,r):t.g?function(t,e){var r=Array.isArray(t),n={i:r?1:0,A:e?e.A:le(),P:!1,I:!1,D:{},l:e,t,k:null,o:null,j:null,C:!1},i=n,o=Re;r&&(i=[n],o=Ue);var s=Proxy.revocable(i,o),a=s.revoke,l=s.proxy;return n.k=l,n.j=a,l}(e,r):ae("ES5").J(e,r);return(r?r.A:le()).p.push(n),n}function xe(t,e){switch(e){case 2:return new Map(t);case 3:return Array.from(t)}return ne(t)}var we,ke,De="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),Ee="undefined"!=typeof Map,Se="undefined"!=typeof Set,qe="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,Le=De?Symbol.for("immer-nothing"):((we={})["immer-nothing"]=!0,we),Fe=De?Symbol.for("immer-draftable"):"__$immer_draftable",Ne=De?Symbol.for("immer-state"):"__$immer_state",Oe=("undefined"!=typeof Symbol&&Symbol.iterator,""+Object.prototype.constructor),Te="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:Object.getOwnPropertyNames,Be=Object.getOwnPropertyDescriptors||function(t){var e={};return Te(t).forEach((function(r){e[r]=Object.getOwnPropertyDescriptor(t,r)})),e},Pe={},Re={get:function(t,e){if(e===Ne)return t;var r=re(t);if(!Kt(r,e))return function(t,e,r){var n,i=be(e,r);return i?"value"in i?i.value:null===(n=i.get)||void 0===n?void 0:n.call(t.k):void 0}(t,r,e);var n=r[e];return t.I||!Zt(n)?n:n===ve(t.t,e)?(Ae(t),t.o[e]=Ce(t.A.h,n,t)):n},has:function(t,e){return e in re(t)},ownKeys:function(t){return Reflect.ownKeys(re(t))},set:function(t,e,r){var n=be(re(t),e);if(null==n?void 0:n.set)return n.set.call(t.k,r),!0;if(!t.P){var i=ve(re(t),e),o=null==i?void 0:i[Ne];if(o&&o.t===r)return t.o[e]=r,t.D[e]=!1,!0;if(function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}(r,i)&&(void 0!==r||Kt(t.t,e)))return!0;Ae(t),ye(t)}return t.o[e]===r&&"number"!=typeof r&&(void 0!==r||e in t.o)||(t.o[e]=r,t.D[e]=!0,!0)},deleteProperty:function(t,e){return void 0!==ve(t.t,e)||e in t.t?(t.D[e]=!1,Ae(t),ye(t)):delete t.D[e],t.o&&delete t.o[e],!0},getOwnPropertyDescriptor:function(t,e){var r=re(t),n=Reflect.getOwnPropertyDescriptor(r,e);return n?{writable:!0,configurable:1!==t.i||"length"!==e,enumerable:n.enumerable,value:r[e]}:n},defineProperty:function(){Gt(11)},getPrototypeOf:function(t){return Object.getPrototypeOf(t.t)},setPrototypeOf:function(){Gt(12)}},Ue={};Yt(Re,(function(t,e){Ue[t]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}})),Ue.deleteProperty=function(t,e){return Ue.set.call(this,t,e,void 0)},Ue.set=function(t,e,r){return Re.set.call(this,t[0],e,r,t[0])};var je=function(){function t(t){var e=this;this.g=qe,this.F=!0,this.produce=function(t,r,n){if("function"==typeof t&&"function"!=typeof r){var i=r;r=t;var o=e;return function(t){var e=this;void 0===t&&(t=i);for(var n=arguments.length,s=Array(n>1?n-1:0),a=1;a<n;a++)s[a-1]=arguments[a];return o.produce(t,(function(t){var n;return(n=r).call.apply(n,[e,t].concat(s))}))}}var s;if("function"!=typeof r&&Gt(6),void 0!==n&&"function"!=typeof n&&Gt(7),Zt(t)){var a=he(e),l=Ce(e,t,void 0),u=!0;try{s=r(l),u=!1}finally{u?ce(a):pe(a)}return"undefined"!=typeof Promise&&s instanceof Promise?s.then((function(t){return ue(a,n),de(t,a)}),(function(t){throw ce(a),t})):(ue(a,n),de(s,a))}if(!t||"object"!=typeof t){if(void 0===(s=r(t))&&(s=t),s===Le&&(s=void 0),e.F&&ie(s,!0),n){var c=[],p=[];ae("Patches").M(t,s,c,p),n(c,p)}return s}Gt(21,t)},this.produceWithPatches=function(t,r){if("function"==typeof t)return function(r){for(var n=arguments.length,i=Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(e){return t.apply(void 0,[e].concat(i))}))};var n,i,o=e.produce(t,r,(function(t,e){n=t,i=e}));return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(t){return[t,n,i]})):[o,n,i]},"boolean"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),"boolean"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze)}var e=t.prototype;return e.createDraft=function(t){Zt(t)||Gt(8),Wt(t)&&(t=function(t){return Wt(t)||Gt(22,t),function t(e){if(!Zt(e))return e;var r,n=e[Ne],i=Jt(e);if(n){if(!n.P&&(n.i<4||!ae("ES5").K(n)))return n.t;n.I=!0,r=xe(e,i),n.I=!1}else r=xe(e,i);return Yt(r,(function(e,i){n&&Xt(n.t,e)===i||Qt(r,e,t(i))})),3===i?new Set(r):r}(t)}(t));var e=he(this),r=Ce(this,t,void 0);return r[Ne].C=!0,pe(e),r},e.finishDraft=function(t,e){var r=(t&&t[Ne]).A;return ue(r,e),de(void 0,r)},e.setAutoFreeze=function(t){this.F=t},e.setUseProxies=function(t){t&&!qe&&Gt(20),this.g=t},e.applyPatches=function(t,e){var r;for(r=e.length-1;r>=0;r--){var n=e[r];if(0===n.path.length&&"replace"===n.op){t=n.value;break}}r>-1&&(e=e.slice(r+1));var i=ae("Patches").$;return Wt(t)?i(t,e):this.produce(t,(function(t){return i(t,e)}))},t}(),Ie=new je,ze=Ie.produce,He=Ie.produceWithPatches.bind(Ie),Me=(Ie.setAutoFreeze.bind(Ie),Ie.setUseProxies.bind(Ie),Ie.applyPatches.bind(Ie));function Ve(t,e){const r=_t();if(null==r.current&&(r.current=new Ge(t)),void 0!==e){const n=_t(e);it()(e,n)||(r.current=new Ge(t))}return r.current}Ie.createDraft.bind(Ie),Ie.finishDraft.bind(Ie);const $e={storeOrdinal:0,batching:!1,flushStores:{}};!function(){function t(e){if(!Zt(e))return e;if(Array.isArray(e))return e.map(t);if(te(e))return new Map(Array.from(e.entries()).map((function(e){return[e[0],t(e[1])]})));if(ee(e))return new Set(Array.from(e).map(t));var r=Object.create(Object.getPrototypeOf(e));for(var n in e)r[n]=t(e[n]);return Kt(e,Fe)&&(r[Fe]=e[Fe]),r}function e(e){return Wt(e)?t(e):e}var r="add";!function(t,e){Pe[t]||(Pe[t]=e)}("Patches",{$:function(e,n){return n.forEach((function(n){for(var i=n.path,o=n.op,s=e,a=0;a<i.length-1;a++){var l=Jt(s),u=""+i[a];0!==l&&1!==l||"__proto__"!==u&&"constructor"!==u||Gt(24),"function"==typeof s&&"prototype"===u&&Gt(24),"object"!=typeof(s=Xt(s,u))&&Gt(15,i.join("/"))}var c=Jt(s),p=t(n.value),h=i[i.length-1];switch(o){case"replace":switch(c){case 2:return s.set(h,p);case 3:Gt(16);default:return s[h]=p}case r:switch(c){case 1:return"-"===h?s.push(p):s.splice(h,0,p);case 2:return s.set(h,p);case 3:return s.add(p);default:return s[h]=p}case"remove":switch(c){case 1:return s.splice(h,1);case 2:return s.delete(h);case 3:return s.delete(n.value);default:return delete s[h]}default:Gt(17,o)}})),e},R:function(t,n,i,o){switch(t.i){case 0:case 4:case 2:return function(t,n,i,o){var s=t.t,a=t.o;Yt(t.D,(function(t,l){var u=Xt(s,t),c=Xt(a,t),p=l?Kt(s,t)?"replace":r:"remove";if(u!==c||"replace"!==p){var h=n.concat(t);i.push("remove"===p?{op:p,path:h}:{op:p,path:h,value:c}),o.push(p===r?{op:"remove",path:h}:"remove"===p?{op:r,path:h,value:e(u)}:{op:"replace",path:h,value:e(u)})}}))}(t,n,i,o);case 5:case 1:return function(t,n,i,o){var s=t.t,a=t.D,l=t.o;if(l.length<s.length){var u=[l,s];s=u[0],l=u[1];var c=[o,i];i=c[0],o=c[1]}for(var p=0;p<s.length;p++)if(a[p]&&l[p]!==s[p]){var h=n.concat([p]);i.push({op:"replace",path:h,value:e(l[p])}),o.push({op:"replace",path:h,value:e(s[p])})}for(var f=s.length;f<l.length;f++){var d=n.concat([f]);i.push({op:r,path:d,value:e(l[f])})}s.length<l.length&&o.push({op:"replace",path:n.concat(["length"]),value:s.length})}(t,n,i,o);case 3:return function(t,e,n,i){var o=t.t,s=t.o,a=0;o.forEach((function(t){if(!s.has(t)){var o=e.concat([a]);n.push({op:"remove",path:o,value:t}),i.unshift({op:r,path:o,value:t})}a++})),a=0,s.forEach((function(t){if(!o.has(t)){var s=e.concat([a]);n.push({op:r,path:s,value:t}),i.unshift({op:"remove",path:s,value:t})}a++}))}(t,n,i,o)}},M:function(t,e,r,n){r.push({op:"replace",path:[],value:e===Le?void 0:e}),n.push({op:"replace",path:[],value:t})}})}();class Ge{constructor(t){if(this.updateListeners=[],this.ssr=!1,this.reactions=[],this.clientSubscriptions=[],this.reactionCreators=[],this.optimizedUpdateListeners={},this.optimizedUpdateListenerPaths={},this.optimizedListenerPropertyMap={},this._optListenerCount=0,this._patchListeners=[],t instanceof Function){const e=t();this.currentState=e,this.initialState=e,this.createInitialState=t}else this.currentState=t,this.initialState=t,this.createInitialState=()=>t;this.internalOrdId=$e.storeOrdinal++}_setInternalOptions({ssr:t,reactionCreators:e=[]}){this.ssr=t,this.reactionCreators=e,this.reactions=e.map((t=>t(this)))}_getReactionCreators(){return this.reactionCreators}_instantiateReactions(){this.reactions=this.reactionCreators.map((t=>t(this)))}_getInitialState(){return this.createInitialState()}_updateStateWithoutReaction(t){this.currentState=t}_updateState(t,e=[]){this.currentState=t,this.batchState=void 0;for(const t of this.reactions)e.push(...t());if(!this.ssr){for(const t of this.clientSubscriptions)t();if(e.length>0){const t=new Set;for(const r of e)if(this.optimizedListenerPropertyMap[r])for(const e of this.optimizedListenerPropertyMap[r])t.add(e);for(const e of t.values())this.optimizedUpdateListeners[e]&&this.optimizedUpdateListeners[e]()}this.updateListeners.forEach((t=>t()))}}_addUpdateListener(t){this.updateListeners.push(t)}_addUpdateListenerOpt(t,e,r){this.optimizedUpdateListeners[e]=t;const n=r.map((t=>t.join("~._.~")));this.optimizedUpdateListenerPaths[e]=n;for(const t of n)null==this.optimizedListenerPropertyMap[t]?this.optimizedListenerPropertyMap[t]=[e]:this.optimizedListenerPropertyMap[t].push(e);this._optListenerCount++}_removeUpdateListener(t){this.updateListeners=this.updateListeners.filter((e=>e!==t))}_removeUpdateListenerOpt(t){const e=this.optimizedUpdateListenerPaths[t];for(const r of e)this.optimizedListenerPropertyMap[r]=this.optimizedListenerPropertyMap[r].filter((e=>e!==t));delete this.optimizedUpdateListenerPaths[t],delete this.optimizedUpdateListeners[t],this._optListenerCount--}listenToPatches(t){return this._patchListeners.push(t),()=>{this._patchListeners=this._patchListeners.filter((e=>e!==t))}}subscribe(t,e){if(!this.ssr){const r=function(t,e,r){let n=e(t.getRawState());return()=>{const i=t.getRawState(),o=e(i);it()(o,n)||(r(o,i,n),n=o)}}(this,t,e);return this.clientSubscriptions.push(r),()=>{this.clientSubscriptions=this.clientSubscriptions.filter((t=>t!==r))}}return()=>{console.warn("Pullstate: Subscriptions made on the server side are not registered - so therefor this call to unsubscribe does nothing.")}}createReaction(t,e,{runNow:r=!1,runNowWithSideEffects:n=!1}={}){const i=function(t,e){return r=>{let n=t(r.getRawState());return(i=!1)=>{const o=r.getRawState(),s=t(o);if(i||!it()(s,n))if(r._optListenerCount>0){const[t,i,a]=He(o,(t=>e(s,t,o,n)));if(r._updateStateWithoutReaction(t),n=s,i.length>0)return r._patchListeners.forEach((t=>t(i,a))),Object.keys(We(i))}else{if(r._patchListeners.length>0){const[t,i,a]=He(o,(t=>e(s,t,o,n)));i.length>0&&r._patchListeners.forEach((t=>t(i,a))),r._updateStateWithoutReaction(t)}else r._updateStateWithoutReaction(ze(o,(t=>e(s,t,o,n))));n=s}return[]}}}(t,e);this.reactionCreators.push(i);const o=i(this);return this.reactions.push(o),(r||n)&&(o(!0),n&&!this.ssr&&this._updateState(this.currentState)),()=>{this.reactions=this.reactions.filter((t=>t!==o))}}getRawState(){return void 0!==this.batchState?this.batchState:this.currentState}useState(t,e){return function(t,e,r){const n=_t({state:void 0,initialized:!1});n.current.initialized||(n.current.state=e?e(t.getRawState()):t.getRawState(),n.current.initialized=!0);const[,i]=ft(0);if(gt((()=>{const r={shouldUpdate:!0};function o(){if(r.shouldUpdate){const o=e?e(t.getRawState()):t.getRawState();it()(n.current.state,o)||r.shouldUpdate&&(n.current.state=o,i((t=>t+1)))}}return t._addUpdateListener(o),o(),()=>{r.shouldUpdate=!1,t._removeUpdateListener(o)}}),null!=r?r:[]),void 0!==r){const i=_t(r);it()(r,i)||(n.current.state=e(t.getRawState()))}return n.current.state}(this,t,e)}useLocalCopyInitial(t){return Ve(this.createInitialState,t)}useLocalCopySnapshot(t){return Ve(this.currentState,t)}flushBatch(t=!1){void 0!==this.batchState?this.batchState!==this.currentState&&this._updateState(this.batchState):t||console.error("Pullstate: Trying to flush batch state which was never created or updated on"),this.batchState=void 0}update(t,e){if($e.batching){void 0===this.batchState&&(this.batchState=this.currentState,$e.flushStores[this.internalOrdId]=this);const r="function"==typeof t,[n,i,o]=Ze(this.batchState,t,r);i.length>0&&(this._patchListeners.length>0||e)&&(e&&e(i,o),this._patchListeners.forEach((t=>t(i,o)))),this.batchState=n}else this.batchState=void 0,function(t,e,r){const n=t.getRawState(),i="function"==typeof e;if(t._optListenerCount>0){const[o,s,a]=Ze(n,e,i);s.length>0&&(r&&r(s,a),t._patchListeners.forEach((t=>t(s,a))),t._updateState(o,Object.keys(We(s))))}else{let o;if(t._patchListeners.length>0||r){const[s,a,l]=Ze(n,e,i);a.length>0&&(r&&r(a,l),t._patchListeners.forEach((t=>t(a,l)))),o=s}else o=ze(n,(t=>i?e(t,n):e.reduce(((t,e)=>ze(t,(r=>e(r,t)))),n)));o!==n&&t._updateState(o)}}(this,t,e)}replace(t){this._updateState(t)}applyPatches(t){!function(t,e){const r=t.getRawState(),n=Me(r,e);n!==r&&t._updateState(n,Object.keys(We(e)))}(this,t)}}function We(t,e={}){for(const r of t){let t;for(const n of r.path)t=t?`${t}~._.~${n}`:n,e[t]=1}return e}function Ze(t,e,r){return r?He(t,(r=>e(r,t))):e.reduce((([t,e,r],n)=>{const i=He(t,(e=>n(e,t)));return e.push(...i[1]),r.push(...i[2]),[i[0],e,r]}),[t,[],[]])}var Ye,Je;let Ke;!function(t){t.THREW_ERROR="THREW_ERROR",t.RETURNED_ERROR="RETURNED_ERROR",t.UNFINISHED="UNFINISHED",t.DORMANT="DORMANT"}(Ye||(Ye={})),function(t){t.WATCH_HIT_CACHE="WATCH_HIT_CACHE",t.BECKON_HIT_CACHE="BECKON_HIT_CACHE",t.RUN_HIT_CACHE="RUN_HIT_CACHE",t.READ_HIT_CACHE="READ_HIT_CACHE",t.READ_RUN="READ_RUN",t.SHORT_CIRCUIT="SHORT_CIRCUIT",t.DIRECT_RUN="DIRECT_RUN",t.BECKON_RUN="BECKON_RUN",t.CACHE_UPDATE="CACHE_UPDATE"}(Je||(Je={})),Error;try{Ke=new Proxy({},{get:function(t,e){throw new Error(`Pullstate: Trying to access store (${String(e)}) inside async actions without the correct usage or setup.\nIf this error occurred on the server:\n* If using run(), make use of your created instance for this request: instance.runAsyncAction()\n* If using read(), useWatch(), useBeckon() etc. - make sure you have properly set up your <PullstateProvider/>\n\nIf this error occurred on the client:\n* Make sure you have created your "pullstateCore" object with all your stores, using createPullstateCore(), and are making use of instantiate() before rendering.`)}})}catch{Ke={}}var Xe;Ye.UNFINISHED,$t(null),function(t){t.WATCH="watch",t.BECKON="beckon"}(Xe||(Xe={}));const Qe=new Ge({prev:"1",step:"1"}),tr=t=>{const e=Qe.useState((t=>t.prev)),r=t=>{Qe.update((e=>{e.prev=e.step,e.step=t}))};return rt`<button class="${t.class}" onclick=${()=>{/^https/.test(t.goto)?window.parent.location=t.goto:t.goto<1?(r(e),location.hash=e):(r(t.goto),location.hash=t.goto)}}>${t.text}</button>`},er=t=>{var e=t.data;return rt`
    <div class="question">
      <p class="text">${e.question}</p>
      <div class="answers">
        ${e.answers.map((t=>rt`<${tr} class="button-yellow" text="${t.text}" goto="${t.goto}" />`))}
      </div>
    </div>
  `},rr={1:{question:"Do you believe there is something to discover in your personal or professional life?",answers:[{text:"Personal",goto:"2"},{text:"Professional",goto:"18"},{text:"Both",goto:"2"}]},2:{question:"Are you experiencing pain or trauma?",answers:[{text:"Yes",goto:"3"},{text:"No",goto:"7"}]},3:{question:"Are you seeking a way to resolve past pain, dysfunction, or conflict?",answers:[{text:"Yes",goto:"4"},{text:"No",goto:"5"}]},4:{end:{title:"Consider psychotherapy",text:"The focus is often on resolving difficulties arising from the past that hamper an \n      individual's emotional functioning in the present, improving overall psychological functioning,\n      and dealing with the present in more emotionally healthy ways.  You may find it helpful to know\n      that ICF Members have received training to discern the differences between coaching and therapy \n      and are obliged by our organization's Code of Ethics to refer prospective or current clients to \n      therapists when appropriate."}},5:{question:"Do you seek action, accountability, and follow-through?",answers:[{text:"Yes",goto:"7"},{text:"No",goto:"6"}]},6:{end:{title:"Consider coaching in the future",text:"Coaching might be the right fit for you in the future. To decide when the time is right, ask yourself the following questions:\n\n * What do I want to accomplish?\n * Do I value collaboration, other viewpoints and new perspectives?\n * Am I ready to devote time and energy to making real changes?"}},7:{question:"Would you like to increase self-confidence and enhance relationships, communication skills, and work/life balance?",answers:[{text:"Yes",goto:"8"},{text:"No",goto:"6"}]},8:{question:"Do you want lasting results to help you be a better person or leader?",answers:[{text:"Yes",goto:"10"},{text:"No",goto:"9"}]},9:{end:{title:"Looks like you're all set.",text:"Based on your answers, you don't need any help right now.\n      \nIf you'd like to answer the questions again, \"Start over\" below."}},10:{question:"Do you want to design actions or solutions for yourself, or do you need someone else to create them for you?",answers:[{text:"My design",goto:"15"},{text:"Someone else's design",goto:"11"}]},11:{question:"Are you seeking someone to evaluate your situation and provide advice or feedback, based on their experience or expertise?",answers:[{text:"Yes",goto:"12"},{text:"No",goto:"6"}]},12:{question:"Are you looking for wisdom and guidance or an expert to identify, prescribe, and potentially implement solutions?",answers:[{text:"Wisdom and guidance",goto:"13"},{text:"Prescribe and implement",goto:"14"}]},13:{end:{title:"Consider mentoring",text:"A mentor is an expert who provides wisdom and guidance based on his or her own experience. Mentoring may include advising, counseling and coaching."}},14:{end:{title:"Consider consulting",text:"Individuals or organizations retain consultants for their expertise. While consulting approaches vary widely, the assumption is the consultant will diagnose problems and prescribe and, sometimes, implement solutions."}},15:{question:"Are you seeking a professional who can work with you to clarify your desires and design actions that will move you toward your goals?",answers:[{text:"Yes",goto:"16"},{text:"No",goto:"6"}]},16:{question:"Are you willing to devote time and energy to making changes?",answers:[{text:"Yes",goto:"17"},{text:"No",goto:"6"}]},17:{end:{title:"Consider coaching",text:"A coach could be beneficial for you! ICF defines coaching as partnering with clients in a \nthought-provoking and creative process that inspires them to maximize their personal and professional \npotential. Coaches honor the client as the expert in his or her life and work and believe every client \nis creative and resourceful. The coach's responsibility is to:\n\n* Discover, clarify and align with what the client wants to achieve.  \n* Encourage client self-discovery.  \n* Elicit client-generated solutions and strategies.  \n* Hold the client responsible and accountable.\n\nThis process helps clients dramatically improve their outlook on work and life, while developing \nleadership skills and unlocking potential.",actions:[{text:"Book a free session!",goto:"https://aaronbieber.coach/get-started"}]}},18:{question:"Do you want a flexible, customizable learning solution or will a set curriculum help you achieve your goals?",answers:[{text:"Customized learning solution",goto:"20"},{text:"Set curriculum",goto:"19"}]},19:{end:{title:"Consider training",text:"Training programs are based on objectives set out by the trainer or instructor. Training also assumes a linear learning path that coincides with an established curriculum."}},20:{question:"Are you looking for increased productivity, time management, team effectiveness, and work performance?",answers:[{text:"Yes",goto:"8"},{text:"No",goto:"7"}]}};function nr(t){switch(t._type){case"document":case"block_quote":case"list":case"item":case"paragraph":case"heading":case"emph":case"strong":case"link":case"image":case"custom_inline":case"custom_block":return!0;default:return!1}}var ir=function(t,e){this.current=t,this.entering=!0===e},or=function(){var t=this.current,e=this.entering;if(null===t)return null;var r=nr(t);return e&&r?t._firstChild?(this.current=t._firstChild,this.entering=!0):this.entering=!1:t===this.root?this.current=null:null===t._next?(this.current=t._parent,this.entering=!1):(this.current=t._next,this.entering=!0),{entering:e,node:t}},sr=function(t){return{current:t,root:t,entering:!0,next:or,resumeAt:ir}},ar=function(t,e){this._type=t,this._parent=null,this._firstChild=null,this._lastChild=null,this._prev=null,this._next=null,this._sourcepos=e,this._lastLineBlank=!1,this._lastLineChecked=!1,this._open=!0,this._string_content=null,this._literal=null,this._listData={},this._info=null,this._destination=null,this._title=null,this._isFenced=!1,this._fenceChar=null,this._fenceLength=0,this._fenceOffset=null,this._level=null,this._onEnter=null,this._onExit=null},lr=ar.prototype;Object.defineProperty(lr,"isContainer",{get:function(){return nr(this)}}),Object.defineProperty(lr,"type",{get:function(){return this._type}}),Object.defineProperty(lr,"firstChild",{get:function(){return this._firstChild}}),Object.defineProperty(lr,"lastChild",{get:function(){return this._lastChild}}),Object.defineProperty(lr,"next",{get:function(){return this._next}}),Object.defineProperty(lr,"prev",{get:function(){return this._prev}}),Object.defineProperty(lr,"parent",{get:function(){return this._parent}}),Object.defineProperty(lr,"sourcepos",{get:function(){return this._sourcepos}}),Object.defineProperty(lr,"literal",{get:function(){return this._literal},set:function(t){this._literal=t}}),Object.defineProperty(lr,"destination",{get:function(){return this._destination},set:function(t){this._destination=t}}),Object.defineProperty(lr,"title",{get:function(){return this._title},set:function(t){this._title=t}}),Object.defineProperty(lr,"info",{get:function(){return this._info},set:function(t){this._info=t}}),Object.defineProperty(lr,"level",{get:function(){return this._level},set:function(t){this._level=t}}),Object.defineProperty(lr,"listType",{get:function(){return this._listData.type},set:function(t){this._listData.type=t}}),Object.defineProperty(lr,"listTight",{get:function(){return this._listData.tight},set:function(t){this._listData.tight=t}}),Object.defineProperty(lr,"listStart",{get:function(){return this._listData.start},set:function(t){this._listData.start=t}}),Object.defineProperty(lr,"listDelimiter",{get:function(){return this._listData.delimiter},set:function(t){this._listData.delimiter=t}}),Object.defineProperty(lr,"onEnter",{get:function(){return this._onEnter},set:function(t){this._onEnter=t}}),Object.defineProperty(lr,"onExit",{get:function(){return this._onExit},set:function(t){this._onExit=t}}),ar.prototype.appendChild=function(t){t.unlink(),t._parent=this,this._lastChild?(this._lastChild._next=t,t._prev=this._lastChild,this._lastChild=t):(this._firstChild=t,this._lastChild=t)},ar.prototype.prependChild=function(t){t.unlink(),t._parent=this,this._firstChild?(this._firstChild._prev=t,t._next=this._firstChild,this._firstChild=t):(this._firstChild=t,this._lastChild=t)},ar.prototype.unlink=function(){this._prev?this._prev._next=this._next:this._parent&&(this._parent._firstChild=this._next),this._next?this._next._prev=this._prev:this._parent&&(this._parent._lastChild=this._prev),this._parent=null,this._next=null,this._prev=null},ar.prototype.insertAfter=function(t){t.unlink(),t._next=this._next,t._next&&(t._next._prev=t),t._prev=this,this._next=t,t._parent=this._parent,t._next||(t._parent._lastChild=t)},ar.prototype.insertBefore=function(t){t.unlink(),t._prev=this._prev,t._prev&&(t._prev._next=t),t._next=this,this._prev=t,t._parent=this._parent,t._prev||(t._parent._firstChild=t)},ar.prototype.walker=function(){return new sr(this)};const ur=ar;var cr,pr=r(729),hr=r(717),fr=new RegExp("^(?:<[A-Za-z][A-Za-z0-9-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\x00-\\x20]+|'[^']*'|\"[^\"]*\"))?)*\\s*/?>|</[A-Za-z][A-Za-z0-9-]*\\s*[>]|\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e|[<][?][\\s\\S]*?[?][>]|<![A-Z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)"),dr=/[\\&]/,gr="[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^_`{|}~-]",_r=new RegExp("\\\\"+gr+"|&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});","gi"),mr=new RegExp('[&<>"]',"g"),vr=function(t){return 92===t.charCodeAt(0)?t.charAt(1):(0,hr.p1)(t)},br=function(t){return dr.test(t)?t.replace(_r,vr):t},yr=function(t){switch(t){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";case'"':return"&quot;";default:return t}},Ar=function(t){return mr.test(t)?t.replace(mr,yr):t};function Cr(t){return cr(t)}if(String.fromCodePoint)cr=function(t){try{return String.fromCodePoint(t)}catch(t){if(t instanceof RangeError)return String.fromCharCode(65533);throw t}};else{var xr=String.fromCharCode,wr=Math.floor;cr=function(){var t,e,r=16384,n=[],i=-1,o=arguments.length;if(!o)return"";for(var s="";++i<o;){var a=Number(arguments[i]);if(!isFinite(a)||a<0||a>1114111||wr(a)!==a)return String.fromCharCode(65533);a<=65535?n.push(a):(t=55296+((a-=65536)>>10),e=a%1024+56320,n.push(t,e)),(i+1===o||n.length>r)&&(s+=xr.apply(null,n),n.length=0)}return s}}r(822);var kr=function(t){try{return pr(t)}catch(e){return t}},Dr=br,Er=39,Sr=34,qr=gr,Lr="\\\\"+qr,Fr=fr,Nr=new RegExp(/^[!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E42\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC9\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDF3C-\uDF3E]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]/),Or=new RegExp('^(?:"('+Lr+'|[^"\\x00])*"|\'('+Lr+"|[^'\\x00])*'|\\(("+Lr+"|[^()\\x00])*\\))"),Tr=/^(?:<(?:[^<>\n\\\x00]|\\.)*>)/,Br=new RegExp("^"+qr),Pr=new RegExp("^&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});","i"),Rr=/`+/,Ur=/^`+/,jr=/\.\.\./g,Ir=/--+/g,zr=/^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/,Hr=/^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\x00-\x20]*>/i,Mr=/^ *(?:\n *)?/,Vr=/^[ \t\n\x0b\x0c\x0d]/,$r=/^\s/,Gr=/ *$/,Wr=/^ */,Zr=/^ *(?:\n|$)/,Yr=/^\[(?:[^\\\[\]]|\\.){0,1000}\]/s,Jr=/^[^\n`\[\]\\!<&*_'"]+/m,Kr=function(t){var e=new ur("text");return e._literal=t,e},Xr=function(t){return t.slice(1,t.length-1).trim().replace(/[ \t\r\n]+/," ").toLowerCase().toUpperCase()},Qr=function(t){var e=t.exec(this.subject.slice(this.pos));return null===e?null:(this.pos+=e.index+e[0].length,e[0])},tn=function(){return this.pos<this.subject.length?this.subject.charCodeAt(this.pos):-1},en=function(){return this.match(Mr),!0},rn=function(t){var e=this.match(Ur);if(null===e)return!1;for(var r,n,i,o=this.pos;null!==(r=this.match(Rr));)if(r===e)return n=new ur("code"),(i=this.subject.slice(o,this.pos-e.length).replace(/\n/gm," ")).length>0&&null!==i.match(/[^ ]/)&&" "==i[0]&&" "==i[i.length-1]?n._literal=i.slice(1,i.length-1):n._literal=i,t.appendChild(n),!0;return this.pos=o,t.appendChild(Kr(e)),!0},nn=function(t){var e,r=this.subject;return this.pos+=1,10===this.peek()?(this.pos+=1,e=new ur("linebreak"),t.appendChild(e)):Br.test(r.charAt(this.pos))?(t.appendChild(Kr(r.charAt(this.pos))),this.pos+=1):t.appendChild(Kr("\\")),!0},on=function(t){var e,r,n;return(e=this.match(zr))?(r=e.slice(1,e.length-1),(n=new ur("link"))._destination=kr("mailto:"+r),n._title="",n.appendChild(Kr(r)),t.appendChild(n),!0):!!(e=this.match(Hr))&&(r=e.slice(1,e.length-1),(n=new ur("link"))._destination=kr(r),n._title="",n.appendChild(Kr(r)),t.appendChild(n),!0)},sn=function(t){var e=this.match(Fr);if(null===e)return!1;var r=new ur("html_inline");return r._literal=e,t.appendChild(r),!0},an=function(t){var e,r,n,i,o,s,a,l,u,c,p,h=0,f=this.pos;if(t===Er||t===Sr)h++,this.pos++;else for(;this.peek()===t;)h++,this.pos++;return 0===h?null:(e=0===f?"\n":this.subject.charAt(f-1),r=-1===(n=this.peek())?"\n":Cr(n),l=$r.test(r),u=Nr.test(r),c=$r.test(e),p=Nr.test(e),i=!l&&(!u||c||p),o=!c&&(!p||l||u),95===t?(s=i&&(!o||p),a=o&&(!i||u)):t===Er||t===Sr?(s=i&&!o,a=o):(s=i,a=o),this.pos=f,{numdelims:h,can_open:s,can_close:a})},ln=function(t,e){var r=this.scanDelims(t);if(!r)return!1;var n,i=r.numdelims,o=this.pos;this.pos+=i,n=t===Er?"â":t===Sr?"â":this.subject.slice(o,this.pos);var s=Kr(n);return e.appendChild(s),(r.can_open||r.can_close)&&(this.options.smart||t!==Er&&t!==Sr)&&(this.delimiters={cc:t,numdelims:i,origdelims:i,node:s,previous:this.delimiters,next:null,can_open:r.can_open,can_close:r.can_close},null!==this.delimiters.previous&&(this.delimiters.previous.next=this.delimiters)),!0},un=function(t){null!==t.previous&&(t.previous.next=t.next),null===t.next?this.delimiters=t.previous:t.next.previous=t.previous},cn=function(t){for(var e,r,n,i,o,s,a,l,u,c,p,h,f,d=[],g=!1,_=0;_<8;_++)d[_]=t;for(r=this.delimiters;null!==r&&r.previous!==t;)r=r.previous;for(;null!==r;){var m=r.cc;if(r.can_close){switch(e=r.previous,c=!1,m){case Er:p=0;break;case Sr:p=1;break;case 95:p=2;break;case 42:p=3+(r.can_open?3:0)+r.origdelims%3}for(;null!==e&&e!==t&&e!==d[p];){if(g=(r.can_open||e.can_close)&&r.origdelims%3!=0&&(e.origdelims+r.origdelims)%3==0,e.cc===r.cc&&e.can_open&&!g){c=!0;break}e=e.previous}if(n=r,42===m||95===m)if(c){a=r.numdelims>=2&&e.numdelims>=2?2:1,i=e.node,o=r.node,e.numdelims-=a,r.numdelims-=a,i._literal=i._literal.slice(0,i._literal.length-a),o._literal=o._literal.slice(0,o._literal.length-a);var v=new ur(1===a?"emph":"strong");for(l=i._next;l&&l!==o;)u=l._next,l.unlink(),v.appendChild(l),l=u;i.insertAfter(v),f=r,(h=e).next!==f&&(h.next=f,f.previous=h),0===e.numdelims&&(i.unlink(),this.removeDelimiter(e)),0===r.numdelims&&(o.unlink(),s=r.next,this.removeDelimiter(r),r=s)}else r=r.next;else m===Er?(r.node._literal="â",c&&(e.node._literal="â"),r=r.next):m===Sr&&(r.node._literal="â",c&&(e.node.literal="â"),r=r.next);c||(d[p]=n.previous,n.can_open||this.removeDelimiter(n))}else r=r.next}for(;null!==this.delimiters&&this.delimiters!==t;)this.removeDelimiter(this.delimiters)},pn=function(){var t=this.match(Or);return null===t?null:Dr(t.substr(1,t.length-2))},hn=function(){var t=this.match(Tr);if(null===t){if(60===this.peek())return null;for(var e,r=this.pos,n=0;-1!==(e=this.peek());)if(92===e&&Br.test(this.subject.charAt(this.pos+1)))this.pos+=1,-1!==this.peek()&&(this.pos+=1);else if(40===e)this.pos+=1,n+=1;else if(41===e){if(n<1)break;this.pos+=1,n-=1}else{if(null!==Vr.exec(Cr(e)))break;this.pos+=1}return this.pos===r&&41!==e||0!==n?null:(t=this.subject.substr(r,this.pos-r),kr(Dr(t)))}return kr(Dr(t.substr(1,t.length-2)))},fn=function(){var t=this.match(Yr);return null===t||t.length>1001?0:t.length},dn=function(t){var e=this.pos;this.pos+=1;var r=Kr("[");return t.appendChild(r),this.addBracket(r,e,!1),!0},gn=function(t){var e=this.pos;if(this.pos+=1,91===this.peek()){this.pos+=1;var r=Kr("![");t.appendChild(r),this.addBracket(r,e+1,!0)}else t.appendChild(Kr("!"));return!0},_n=function(t){var e,r,n,i,o,s,a=!1;if(this.pos+=1,e=this.pos,null===(s=this.brackets))return t.appendChild(Kr("]")),!0;if(!s.active)return t.appendChild(Kr("]")),this.removeBracket(),!0;r=s.image;var l=this.pos;if(40===this.peek()&&(this.pos++,this.spnl()&&null!==(n=this.parseLinkDestination())&&this.spnl()&&(Vr.test(this.subject.charAt(this.pos-1))&&(i=this.parseLinkTitle()),1)&&this.spnl()&&41===this.peek()?(this.pos+=1,a=!0):this.pos=l),!a){var u=this.pos,c=this.parseLinkLabel();if(c>2?o=this.subject.slice(u,u+c):s.bracketAfter||(o=this.subject.slice(s.index,e)),0===c&&(this.pos=l),o){var p=this.refmap[Xr(o)];p&&(n=p.destination,i=p.title,a=!0)}}if(a){var h,f,d=new ur(r?"image":"link");for(d._destination=n,d._title=i||"",h=s.node._next;h;)f=h._next,h.unlink(),d.appendChild(h),h=f;if(t.appendChild(d),this.processEmphasis(s.previousDelimiter),this.removeBracket(),s.node.unlink(),!r)for(s=this.brackets;null!==s;)s.image||(s.active=!1),s=s.previous;return!0}return this.removeBracket(),this.pos=e,t.appendChild(Kr("]")),!0},mn=function(t,e,r){null!==this.brackets&&(this.brackets.bracketAfter=!0),this.brackets={node:t,previous:this.brackets,previousDelimiter:this.delimiters,index:e,image:r,active:!0}},vn=function(){this.brackets=this.brackets.previous},bn=function(t){var e;return!!(e=this.match(Pr))&&(t.appendChild(Kr((0,hr.p1)(e))),!0)},yn=function(t){var e;return!!(e=this.match(Jr))&&(this.options.smart?t.appendChild(Kr(e.replace(jr,"â¦").replace(Ir,(function(t){var e=0,r=0;return t.length%3==0?r=t.length/3:t.length%2==0?e=t.length/2:t.length%3==2?(e=1,r=(t.length-2)/3):(e=2,r=(t.length-4)/3),"â".repeat(r)+"â".repeat(e)})))):t.appendChild(Kr(e)),!0)},An=function(t){this.pos+=1;var e=t._lastChild;if(e&&"text"===e.type&&" "===e._literal[e._literal.length-1]){var r=" "===e._literal[e._literal.length-2];e._literal=e._literal.replace(Gr,""),t.appendChild(new ur(r?"linebreak":"softbreak"))}else t.appendChild(new ur("softbreak"));return this.match(Wr),!0},Cn=function(t,e){var r,n,i,o;this.subject=t,this.pos=0;var s=this.pos;if(0===(o=this.parseLinkLabel()))return 0;if(r=this.subject.substr(0,o),58!==this.peek())return this.pos=s,0;if(this.pos++,this.spnl(),null===(n=this.parseLinkDestination()))return this.pos=s,0;var a=this.pos;this.spnl(),this.pos!==a&&(i=this.parseLinkTitle()),null===i&&(i="",this.pos=a);var l=!0;if(null===this.match(Zr)&&(""===i?l=!1:(i="",this.pos=a,l=null!==this.match(Zr))),!l)return this.pos=s,0;var u=Xr(r);return""===u?(this.pos=s,0):(e[u]||(e[u]={destination:n,title:i}),this.pos-s)},xn=function(t){var e=!1,r=this.peek();if(-1===r)return!1;switch(r){case 10:e=this.parseNewline(t);break;case 92:e=this.parseBackslash(t);break;case 96:e=this.parseBackticks(t);break;case 42:case 95:e=this.handleDelim(r,t);break;case Er:case Sr:e=this.options.smart&&this.handleDelim(r,t);break;case 91:e=this.parseOpenBracket(t);break;case 33:e=this.parseBang(t);break;case 93:e=this.parseCloseBracket(t);break;case 60:e=this.parseAutolink(t)||this.parseHtmlTag(t);break;case 38:e=this.parseEntity(t);break;default:e=this.parseString(t)}return e||(this.pos+=1,t.appendChild(Kr(Cr(r)))),!0},wn=function(t){for(this.subject=t._string_content.trim(),this.pos=0,this.delimiters=null,this.brackets=null;this.parseInline(t););t._string_content=null,this.processEmphasis(null)};const kn=function(t){return{subject:"",delimiters:null,brackets:null,pos:0,refmap:{},match:Qr,peek:tn,spnl:en,parseBackticks:rn,parseBackslash:nn,parseAutolink:on,parseHtmlTag:sn,scanDelims:an,handleDelim:ln,parseLinkTitle:pn,parseLinkDestination:hn,parseLinkLabel:fn,parseOpenBracket:dn,parseBang:gn,parseCloseBracket:_n,addBracket:mn,removeBracket:vn,parseEntity:bn,parseString:yn,parseNewline:An,parseReference:Cn,parseInline:xn,processEmphasis:cn,removeDelimiter:un,options:t||{},parse:wn}};var Dn=[/./,/^<(?:script|pre|textarea|style)(?:\s|>|$)/i,/^<!--/,/^<[?]/,/^<![A-Z]/,/^<!\[CDATA\[/,/^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\s|[/]?[>]|$)/i,new RegExp("^(?:<[A-Za-z][A-Za-z0-9-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\x00-\\x20]+|'[^']*'|\"[^\"]*\"))?)*\\s*/?>|</[A-Za-z][A-Za-z0-9-]*\\s*[>])\\s*$","i")],En=[/./,/<\/(?:script|pre|textarea|style)>/i,/-->/,/\?>/,/>/,/\]\]>/],Sn=/^(?:\*[ \t]*){3,}$|^(?:_[ \t]*){3,}$|^(?:-[ \t]*){3,}$/,qn=/^[#`~*+_=<>0-9-]/,Ln=/[^ \t\f\v\r\n]/,Fn=/^[*+-]/,Nn=/^(\d{1,9})([.)])/,On=/^#{1,6}(?:[ \t]+|$)/,Tn=/^`{3,}(?!.*`)|^~{3,}/,Bn=/^(?:`{3,}|~{3,})(?= *$)/,Pn=/^(?:=+|-+)[ \t]*$/,Rn=/\r\n|\n|\r/,Un=function(t){return 32===t||9===t},jn=function(t,e){return e<t.length?t.charCodeAt(e):-1},In=function(t){for(;t;){if(t._lastLineBlank)return!0;var e=t.type;if(t._lastLineChecked||"list"!==e&&"item"!==e){t._lastLineChecked=!0;break}t._lastLineChecked=!0,t=t._lastChild}return!1},zn=function(){if(this.partiallyConsumedTab){this.offset+=1;var t=4-this.column%4;this.tip._string_content+=" ".repeat(t)}this.tip._string_content+=this.currentLine.slice(this.offset)+"\n"},Hn=function(t,e){for(;!this.blocks[this.tip.type].canContain(t);)this.finalize(this.tip,this.lineNumber-1);var r=e+1,n=new ur(t,[[this.lineNumber,r],[0,0]]);return n._string_content="",this.tip.appendChild(n),this.tip=n,n},Mn=function(){if(!this.allClosed){for(;this.oldtip!==this.lastMatchedContainer;){var t=this.oldtip._parent;this.finalize(this.oldtip,this.lineNumber-1),this.oldtip=t}this.allClosed=!0}},Vn={document:{continue:function(){return 0},finalize:function(){},canContain:function(t){return"item"!==t},acceptsLines:!1},list:{continue:function(){return 0},finalize:function(t,e){for(var r=e._firstChild;r;){if(In(r)&&r._next){e._listData.tight=!1;break}for(var n=r._firstChild;n;){if(In(n)&&(r._next||n._next)){e._listData.tight=!1;break}n=n._next}r=r._next}},canContain:function(t){return"item"===t},acceptsLines:!1},block_quote:{continue:function(t){var e=t.currentLine;return t.indented||62!==jn(e,t.nextNonspace)?1:(t.advanceNextNonspace(),t.advanceOffset(1,!1),Un(jn(e,t.offset))&&t.advanceOffset(1,!0),0)},finalize:function(){},canContain:function(t){return"item"!==t},acceptsLines:!1},item:{continue:function(t,e){if(t.blank){if(null==e._firstChild)return 1;t.advanceNextNonspace()}else{if(!(t.indent>=e._listData.markerOffset+e._listData.padding))return 1;t.advanceOffset(e._listData.markerOffset+e._listData.padding,!0)}return 0},finalize:function(){},canContain:function(t){return"item"!==t},acceptsLines:!1},heading:{continue:function(){return 1},finalize:function(){},canContain:function(){return!1},acceptsLines:!1},thematic_break:{continue:function(){return 1},finalize:function(){},canContain:function(){return!1},acceptsLines:!1},code_block:{continue:function(t,e){var r=t.currentLine,n=t.indent;if(e._isFenced){var i=n<=3&&r.charAt(t.nextNonspace)===e._fenceChar&&r.slice(t.nextNonspace).match(Bn);if(i&&i[0].length>=e._fenceLength)return t.lastLineLength=t.offset+n+i[0].length,t.finalize(e,t.lineNumber),2;for(var o=e._fenceOffset;o>0&&Un(jn(r,t.offset));)t.advanceOffset(1,!0),o--}else if(n>=4)t.advanceOffset(4,!0);else{if(!t.blank)return 1;t.advanceNextNonspace()}return 0},finalize:function(t,e){if(e._isFenced){var r=e._string_content,n=r.indexOf("\n"),i=r.slice(0,n),o=r.slice(n+1);e.info=br(i.trim()),e._literal=o}else e._literal=e._string_content.replace(/(\n *)+$/,"\n");e._string_content=null},canContain:function(){return!1},acceptsLines:!0},html_block:{continue:function(t,e){return!t.blank||6!==e._htmlBlockType&&7!==e._htmlBlockType?0:1},finalize:function(t,e){e._literal=e._string_content.replace(/(\n *)+$/,""),e._string_content=null},canContain:function(){return!1},acceptsLines:!0},paragraph:{continue:function(t){return t.blank?1:0},finalize:function(t,e){for(var r,n=!1;91===jn(e._string_content,0)&&(r=t.inlineParser.parseReference(e._string_content,t.refmap));)e._string_content=e._string_content.slice(r),n=!0;n&&function(t){return!Ln.test(t)}(e._string_content)&&e.unlink()},canContain:function(){return!1},acceptsLines:!0}},$n=[function(t){return t.indented||62!==jn(t.currentLine,t.nextNonspace)?0:(t.advanceNextNonspace(),t.advanceOffset(1,!1),Un(jn(t.currentLine,t.offset))&&t.advanceOffset(1,!0),t.closeUnmatchedBlocks(),t.addChild("block_quote",t.nextNonspace),1)},function(t){var e;if(!t.indented&&(e=t.currentLine.slice(t.nextNonspace).match(On))){t.advanceNextNonspace(),t.advanceOffset(e[0].length,!1),t.closeUnmatchedBlocks();var r=t.addChild("heading",t.nextNonspace);return r.level=e[0].trim().length,r._string_content=t.currentLine.slice(t.offset).replace(/^[ \t]*#+[ \t]*$/,"").replace(/[ \t]+#+[ \t]*$/,""),t.advanceOffset(t.currentLine.length-t.offset),2}return 0},function(t){var e;if(!t.indented&&(e=t.currentLine.slice(t.nextNonspace).match(Tn))){var r=e[0].length;t.closeUnmatchedBlocks();var n=t.addChild("code_block",t.nextNonspace);return n._isFenced=!0,n._fenceLength=r,n._fenceChar=e[0][0],n._fenceOffset=t.indent,t.advanceNextNonspace(),t.advanceOffset(r,!1),2}return 0},function(t,e){if(!t.indented&&60===jn(t.currentLine,t.nextNonspace)){var r,n=t.currentLine.slice(t.nextNonspace);for(r=1;r<=7;r++)if(Dn[r].test(n)&&(r<7||"paragraph"!==e.type&&(t.allClosed||t.blank||"paragraph"!==t.tip.type)))return t.closeUnmatchedBlocks(),t.addChild("html_block",t.offset)._htmlBlockType=r,2}return 0},function(t,e){var r;if(!t.indented&&"paragraph"===e.type&&(r=t.currentLine.slice(t.nextNonspace).match(Pn))){var n;for(t.closeUnmatchedBlocks();91===jn(e._string_content,0)&&(n=t.inlineParser.parseReference(e._string_content,t.refmap));)e._string_content=e._string_content.slice(n);if(e._string_content.length>0){var i=new ur("heading",e.sourcepos);return i.level="="===r[0][0]?1:2,i._string_content=e._string_content,e.insertAfter(i),e.unlink(),t.tip=i,t.advanceOffset(t.currentLine.length-t.offset,!1),2}return 0}return 0},function(t){return!t.indented&&Sn.test(t.currentLine.slice(t.nextNonspace))?(t.closeUnmatchedBlocks(),t.addChild("thematic_break",t.nextNonspace),t.advanceOffset(t.currentLine.length-t.offset,!1),2):0},function(t,e){var r,n,i;return t.indented&&"list"!==e.type||!(r=function(t,e){var r,n,i,o,s=t.currentLine.slice(t.nextNonspace),a={type:null,tight:!0,bulletChar:null,start:null,delimiter:null,padding:null,markerOffset:t.indent};if(t.indent>=4)return null;if(r=s.match(Fn))a.type="bullet",a.bulletChar=r[0][0];else{if(!(r=s.match(Nn))||"paragraph"===e.type&&1!=r[1])return null;a.type="ordered",a.start=parseInt(r[1]),a.delimiter=r[2]}if(-1!==(n=jn(t.currentLine,t.nextNonspace+r[0].length))&&9!==n&&32!==n)return null;if("paragraph"===e.type&&!t.currentLine.slice(t.nextNonspace+r[0].length).match(Ln))return null;t.advanceNextNonspace(),t.advanceOffset(r[0].length,!0),i=t.column,o=t.offset;do{t.advanceOffset(1,!0),n=jn(t.currentLine,t.offset)}while(t.column-i<5&&Un(n));var l=-1===jn(t.currentLine,t.offset),u=t.column-i;return u>=5||u<1||l?(a.padding=r[0].length+1,t.column=i,t.offset=o,Un(jn(t.currentLine,t.offset))&&t.advanceOffset(1,!0)):a.padding=r[0].length+u,a}(t,e))?0:(t.closeUnmatchedBlocks(),"list"===t.tip.type&&(i=r,(n=e._listData).type===i.type&&n.delimiter===i.delimiter&&n.bulletChar===i.bulletChar)||((e=t.addChild("list",t.nextNonspace))._listData=r),(e=t.addChild("item",t.nextNonspace))._listData=r,1)},function(t){return t.indented&&"paragraph"!==t.tip.type&&!t.blank?(t.advanceOffset(4,!0),t.closeUnmatchedBlocks(),t.addChild("code_block",t.offset),2):0}],Gn=function(t,e){for(var r,n,i,o=this.currentLine;t>0&&(i=o[this.offset]);)"\t"===i?(r=4-this.column%4,e?(this.partiallyConsumedTab=r>t,n=r>t?t:r,this.column+=n,this.offset+=this.partiallyConsumedTab?0:1,t-=n):(this.partiallyConsumedTab=!1,this.column+=r,this.offset+=1,t-=1)):(this.partiallyConsumedTab=!1,this.offset+=1,this.column+=1,t-=1)},Wn=function(){this.offset=this.nextNonspace,this.column=this.nextNonspaceColumn,this.partiallyConsumedTab=!1},Zn=function(){for(var t,e=this.currentLine,r=this.offset,n=this.column;""!==(t=e.charAt(r));)if(" "===t)r++,n++;else{if("\t"!==t)break;r++,n+=4-n%4}this.blank="\n"===t||"\r"===t||""===t,this.nextNonspace=r,this.nextNonspaceColumn=n,this.indent=this.nextNonspaceColumn-this.column,this.indented=this.indent>=4},Yn=function(t){var e,r,n=!0,i=this.doc;for(this.oldtip=this.tip,this.offset=0,this.column=0,this.blank=!1,this.partiallyConsumedTab=!1,this.lineNumber+=1,-1!==t.indexOf("\0")&&(t=t.replace(/\0/g,"ï¿½")),this.currentLine=t;(r=i._lastChild)&&r._open;){switch(i=r,this.findNextNonspace(),this.blocks[i.type].continue(this,i)){case 0:break;case 1:n=!1;break;case 2:return;default:throw"continue returned illegal value, must be 0, 1, or 2"}if(!n){i=i._parent;break}}this.allClosed=i===this.oldtip,this.lastMatchedContainer=i;for(var o="paragraph"!==i.type&&Vn[i.type].acceptsLines,s=this.blockStarts,a=s.length;!o;){if(this.findNextNonspace(),!this.indented&&!qn.test(t.slice(this.nextNonspace))){this.advanceNextNonspace();break}for(var l=0;l<a;){var u=s[l](this,i);if(1===u){i=this.tip;break}if(2===u){i=this.tip,o=!0;break}l++}if(l===a){this.advanceNextNonspace();break}}if(this.allClosed||this.blank||"paragraph"!==this.tip.type){this.closeUnmatchedBlocks(),this.blank&&i.lastChild&&(i.lastChild._lastLineBlank=!0),e=i.type;for(var c=this.blank&&!("block_quote"===e||"code_block"===e&&i._isFenced||"item"===e&&!i._firstChild&&i.sourcepos[0][0]===this.lineNumber),p=i;p;)p._lastLineBlank=c,p=p._parent;this.blocks[e].acceptsLines?(this.addLine(),"html_block"===e&&i._htmlBlockType>=1&&i._htmlBlockType<=5&&En[i._htmlBlockType].test(this.currentLine.slice(this.offset))&&(this.lastLineLength=t.length,this.finalize(i,this.lineNumber))):this.offset<t.length&&!this.blank&&(i=this.addChild("paragraph",this.offset),this.advanceNextNonspace(),this.addLine())}else this.addLine();this.lastLineLength=t.length},Jn=function(t,e){var r=t._parent;t._open=!1,t.sourcepos[1]=[e,this.lastLineLength],this.blocks[t.type].finalize(this,t),this.tip=r},Kn=function(t){var e,r,n,i=t.walker();for(this.inlineParser.refmap=this.refmap,this.inlineParser.options=this.options;r=i.next();)n=(e=r.node).type,r.entering||"paragraph"!==n&&"heading"!==n||this.inlineParser.parse(e)},Xn=function(){return new ur("document",[[1,1],[0,0]])},Qn=function(t){this.doc=new Xn,this.tip=this.doc,this.refmap={},this.lineNumber=0,this.lastLineLength=0,this.offset=0,this.column=0,this.lastMatchedContainer=this.doc,this.currentLine="",this.options.time&&console.time("preparing input");var e=t.split(Rn),r=e.length;10===t.charCodeAt(t.length-1)&&(r-=1),this.options.time&&console.timeEnd("preparing input"),this.options.time&&console.time("block parsing");for(var n=0;n<r;n++)this.incorporateLine(e[n]);for(;this.tip;)this.finalize(this.tip,r);return this.options.time&&console.timeEnd("block parsing"),this.options.time&&console.time("inline parsing"),this.processInlines(this.doc),this.options.time&&console.timeEnd("inline parsing"),this.doc};const ti=function(t){return{doc:new Xn,blocks:Vn,blockStarts:$n,tip:this.doc,oldtip:this.doc,currentLine:"",lineNumber:0,offset:0,column:0,nextNonspace:0,nextNonspaceColumn:0,indent:0,indented:!1,blank:!1,partiallyConsumedTab:!1,allClosed:!0,lastMatchedContainer:this.doc,refmap:{},lastLineLength:0,inlineParser:new kn(t),findNextNonspace:Zn,advanceOffset:Gn,advanceNextNonspace:Wn,addLine:zn,addChild:Hn,incorporateLine:Yn,finalize:Jn,processInlines:Kn,closeUnmatchedBlocks:Mn,parse:Qn,options:t||{}}};function ei(){}ei.prototype.render=function(t){var e,r,n=t.walker();for(this.buffer="",this.lastOut="\n";e=n.next();)this[r=e.node.type]&&this[r](e.node,e.entering);return this.buffer},ei.prototype.out=function(t){this.lit(t)},ei.prototype.lit=function(t){this.buffer+=t,this.lastOut=t},ei.prototype.cr=function(){"\n"!==this.lastOut&&this.lit("\n")},ei.prototype.esc=function(t){return t};const ri=ei;var ni=/^javascript:|vbscript:|file:|data:/i,ii=/^data:image\/(?:png|gif|jpeg|webp)/i,oi=function(t){return ni.test(t)&&!ii.test(t)};function si(t){(t=t||{}).softbreak=t.softbreak||"\n",this.esc=t.esc||Ar,this.disableTags=0,this.lastOut="\n",this.options=t}si.prototype=Object.create(ri.prototype),si.prototype.text=function(t){this.out(t.literal)},si.prototype.html_inline=function(t){this.options.safe?this.lit("\x3c!-- raw HTML omitted --\x3e"):this.lit(t.literal)},si.prototype.html_block=function(t){this.cr(),this.options.safe?this.lit("\x3c!-- raw HTML omitted --\x3e"):this.lit(t.literal),this.cr()},si.prototype.softbreak=function(){this.lit(this.options.softbreak)},si.prototype.linebreak=function(){this.tag("br",[],!0),this.cr()},si.prototype.link=function(t,e){var r=this.attrs(t);e?(this.options.safe&&oi(t.destination)||r.push(["href",this.esc(t.destination)]),t.title&&r.push(["title",this.esc(t.title)]),this.tag("a",r)):this.tag("/a")},si.prototype.image=function(t,e){e?(0===this.disableTags&&(this.options.safe&&oi(t.destination)?this.lit('<img src="" alt="'):this.lit('<img src="'+this.esc(t.destination)+'" alt="')),this.disableTags+=1):(this.disableTags-=1,0===this.disableTags&&(t.title&&this.lit('" title="'+this.esc(t.title)),this.lit('" />')))},si.prototype.emph=function(t,e){this.tag(e?"em":"/em")},si.prototype.strong=function(t,e){this.tag(e?"strong":"/strong")},si.prototype.paragraph=function(t,e){var r=t.parent.parent,n=this.attrs(t);null!==r&&"list"===r.type&&r.listTight||(e?(this.cr(),this.tag("p",n)):(this.tag("/p"),this.cr()))},si.prototype.heading=function(t,e){var r="h"+t.level,n=this.attrs(t);e?(this.cr(),this.tag(r,n)):(this.tag("/"+r),this.cr())},si.prototype.code=function(t){this.tag("code"),this.out(t.literal),this.tag("/code")},si.prototype.code_block=function(t){var e=t.info?t.info.split(/\s+/):[],r=this.attrs(t);e.length>0&&e[0].length>0&&r.push(["class","language-"+this.esc(e[0])]),this.cr(),this.tag("pre"),this.tag("code",r),this.out(t.literal),this.tag("/code"),this.tag("/pre"),this.cr()},si.prototype.thematic_break=function(t){var e=this.attrs(t);this.cr(),this.tag("hr",e,!0),this.cr()},si.prototype.block_quote=function(t,e){var r=this.attrs(t);e?(this.cr(),this.tag("blockquote",r),this.cr()):(this.cr(),this.tag("/blockquote"),this.cr())},si.prototype.list=function(t,e){var r="bullet"===t.listType?"ul":"ol",n=this.attrs(t);if(e){var i=t.listStart;null!==i&&1!==i&&n.push(["start",i.toString()]),this.cr(),this.tag(r,n),this.cr()}else this.cr(),this.tag("/"+r),this.cr()},si.prototype.item=function(t,e){var r=this.attrs(t);e?this.tag("li",r):(this.tag("/li"),this.cr())},si.prototype.custom_inline=function(t,e){e&&t.onEnter?this.lit(t.onEnter):!e&&t.onExit&&this.lit(t.onExit)},si.prototype.custom_block=function(t,e){this.cr(),e&&t.onEnter?this.lit(t.onEnter):!e&&t.onExit&&this.lit(t.onExit),this.cr()},si.prototype.esc=Ar,si.prototype.out=function(t){this.lit(this.esc(t))},si.prototype.tag=function(t,e,r){if(!(this.disableTags>0)){if(this.buffer+="<"+t,e&&e.length>0)for(var n,i=0;void 0!==(n=e[i]);)this.buffer+=" "+n[0]+'="'+n[1]+'"',i++;r&&(this.buffer+=" /"),this.buffer+=">",this.lastOut=">"}},si.prototype.attrs=function(t){var e=[];if(this.options.sourcepos){var r=t.sourcepos;r&&e.push(["data-sourcepos",String(r[0][0])+":"+String(r[0][1])+"-"+String(r[1][0])+":"+String(r[1][1])])}return e};const ai=si;var li=/\<[^>]*\>/;function ui(t){return t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()}function ci(t){t=t||{},this.disableTags=0,this.lastOut="\n",this.indentLevel=0,this.indent="  ",this.esc=t.esc||Ar,this.options=t}ci.prototype=Object.create(ri.prototype),ci.prototype.render=function(t){var e,r;this.buffer="";var n,i,o,s,a,l,u=t.walker(),c=this.options;for(c.time&&console.time("rendering"),this.buffer+='<?xml version="1.0" encoding="UTF-8"?>\n',this.buffer+='<!DOCTYPE document SYSTEM "CommonMark.dtd">\n';n=u.next();)if(o=n.entering,l=(i=n.node).type,s=i.isContainer,a="thematic_break"===l||"linebreak"===l||"softbreak"===l,r=ui(l),o){switch(e=[],l){case"document":e.push(["xmlns","http://commonmark.org/xml/1.0"]);break;case"list":null!==i.listType&&e.push(["type",i.listType.toLowerCase()]),null!==i.listStart&&e.push(["start",String(i.listStart)]),null!==i.listTight&&e.push(["tight",i.listTight?"true":"false"]);var p=i.listDelimiter;if(null!==p){var h;h="."===p?"period":"paren",e.push(["delimiter",h])}break;case"code_block":i.info&&e.push(["info",i.info]);break;case"heading":e.push(["level",String(i.level)]);break;case"link":case"image":e.push(["destination",i.destination]),e.push(["title",i.title]);break;case"custom_inline":case"custom_block":e.push(["on_enter",i.onEnter]),e.push(["on_exit",i.onExit])}if(c.sourcepos){var f=i.sourcepos;f&&e.push(["sourcepos",String(f[0][0])+":"+String(f[0][1])+"-"+String(f[1][0])+":"+String(f[1][1])])}if(this.cr(),this.out(this.tag(r,e,a)),s)this.indentLevel+=1;else if(!s&&!a){var d=i.literal;d&&this.out(this.esc(d)),this.out(this.tag("/"+r))}}else this.indentLevel-=1,this.cr(),this.out(this.tag("/"+r));return c.time&&console.timeEnd("rendering"),this.buffer+="\n",this.buffer},ci.prototype.out=function(t){this.disableTags>0?this.buffer+=t.replace(li,""):this.buffer+=t,this.lastOut=t},ci.prototype.cr=function(){if("\n"!==this.lastOut){this.buffer+="\n",this.lastOut="\n";for(var t=this.indentLevel;t>0;t--)this.buffer+=this.indent}},ci.prototype.tag=function(t,e,r){var n="<"+t;if(e&&e.length>0)for(var i,o=0;void 0!==(i=e[o]);)n+=" "+i[0]+'="'+this.esc(i[1])+'"',o++;return r&&(n+=" /"),n+">"},ci.prototype.esc=Ar;const pi=t=>{var e,r=new ti,n=new ai;return e=t.data.actions?rt`
      ${t.data.actions.map((t=>rt`<${tr} class="button-yellow nav-button" text="${t.text}" goto="${t.goto}" />`))}
    `:rt`<${tr} class="button-yellow nav-button" text="Start over?" goto="1" />`,rt`
    <div class="question">
      <h3>${t.data.title}</h3>
      <div dangerouslySetInnerHTML=${{__html:n.render(r.parse(t.data.text))}} />
    </div>

    ${e}
  `};if(location.hash.length>1){var hi=location.hash.substring(1);Object.keys(g).includes(hi)&&Qe.update((t=>{t.step=hi}))}J(rt`<${t=>{const e=Qe.useState((t=>t.step));let r,n;return Qe.useState((t=>t.prev)),e>1&&(n=rt`<${tr} class="button-white margin-bottom" goto="-1" text="Go back" />`),r="end"in rr[e]?rt`<${pi} data=${rr[e].end} />`:rt`<${er} data=${rr[e]} />`,rt`
    <div id="container">
      ${n}
      ${r}
    </div>
  `}} />`,document.body)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,